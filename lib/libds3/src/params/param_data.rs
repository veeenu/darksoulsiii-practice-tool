// **********************************
// *** AUTOGENERATED, DO NOT EDIT ***
// **********************************
use super::*;
use std::collections::HashMap;
use std::sync::LazyLock;
use crate::{ParamVisitor, ParamStruct};
use macro_param::ParamStruct;

unsafe fn get_lambda<T: ParamStruct>() -> BoxedVisitorLambda {
    Box::new(|ptr, v| {
        if let Some(r) = (ptr as *mut T).as_mut() {
            r.visit(&mut *v);
        }
    })
}

type BoxedVisitorLambda = Box<dyn Fn(*const c_void, &mut dyn ParamVisitor) + Send + Sync>;

pub static PARAM_VTABLE: LazyLock<HashMap<String, BoxedVisitorLambda>> = LazyLock::new(|| {
    [
        ("ActionButtonParam".to_string(), unsafe { get_lambda::<ActionButtonParam>() }),
        ("AiSoundParam".to_string(), unsafe { get_lambda::<AiSoundParam>() }),
        ("AtkParam_Npc".to_string(), unsafe { get_lambda::<AtkParam_Npc>() }),
        ("AtkParam_Pc".to_string(), unsafe { get_lambda::<AtkParam_Pc>() }),
        ("AttackElementCorrectParam".to_string(), unsafe { get_lambda::<AttackElementCorrectParam>() }),
        ("BehaviorParam".to_string(), unsafe { get_lambda::<BehaviorParam>() }),
        ("BehaviorParam_PC".to_string(), unsafe { get_lambda::<BehaviorParam_PC>() }),
        ("BonfireWarpParam".to_string(), unsafe { get_lambda::<BonfireWarpParam>() }),
        ("BudgetParam".to_string(), unsafe { get_lambda::<BudgetParam>() }),
        ("Bullet".to_string(), unsafe { get_lambda::<Bullet>() }),
        ("BulletCreateLimitParam".to_string(), unsafe { get_lambda::<BulletCreateLimitParam>() }),
        ("CalcCorrectGraph".to_string(), unsafe { get_lambda::<CalcCorrectGraph>() }),
        ("Ceremony".to_string(), unsafe { get_lambda::<Ceremony>() }),
        ("CharacterLoadParam".to_string(), unsafe { get_lambda::<CharacterLoadParam>() }),
        ("CharaInitParam".to_string(), unsafe { get_lambda::<CharaInitParam>() }),
        ("CharMakeMenuListItemParam".to_string(), unsafe { get_lambda::<CharMakeMenuListItemParam>() }),
        ("CharMakeMenuTopParam".to_string(), unsafe { get_lambda::<CharMakeMenuTopParam>() }),
        ("ClearCountCorrectParam".to_string(), unsafe { get_lambda::<ClearCountCorrectParam>() }),
        ("CoolTimeParam".to_string(), unsafe { get_lambda::<CoolTimeParam>() }),
        ("CultSettingParam".to_string(), unsafe { get_lambda::<CultSettingParam>() }),
        ("DecalParam".to_string(), unsafe { get_lambda::<DecalParam>() }),
        ("DirectionCameraParam".to_string(), unsafe { get_lambda::<DirectionCameraParam>() }),
        ("EquipMtrlSetParam".to_string(), unsafe { get_lambda::<EquipMtrlSetParam>() }),
        ("EquipParamAccessory".to_string(), unsafe { get_lambda::<EquipParamAccessory>() }),
        ("EquipParamGoods".to_string(), unsafe { get_lambda::<EquipParamGoods>() }),
        ("EquipParamProtector".to_string(), unsafe { get_lambda::<EquipParamProtector>() }),
        ("EquipParamWeapon".to_string(), unsafe { get_lambda::<EquipParamWeapon>() }),
        ("FaceGenParam".to_string(), unsafe { get_lambda::<FaceGenParam>() }),
        ("FaceParam".to_string(), unsafe { get_lambda::<FaceParam>() }),
        ("FaceRangeParam".to_string(), unsafe { get_lambda::<FaceRangeParam>() }),
        ("FootSfxParam".to_string(), unsafe { get_lambda::<FootSfxParam>() }),
        ("GameAreaParam".to_string(), unsafe { get_lambda::<GameAreaParam>() }),
        ("GameProgressParam".to_string(), unsafe { get_lambda::<GameProgressParam>() }),
        ("GemCategoryParam".to_string(), unsafe { get_lambda::<GemCategoryParam>() }),
        ("GemDropDopingParam".to_string(), unsafe { get_lambda::<GemDropDopingParam>() }),
        ("GemDropModifyParam".to_string(), unsafe { get_lambda::<GemDropModifyParam>() }),
        ("GemeffectParam".to_string(), unsafe { get_lambda::<GemeffectParam>() }),
        ("GemGenParam".to_string(), unsafe { get_lambda::<GemGenParam>() }),
        ("HitEffectSeParam".to_string(), unsafe { get_lambda::<HitEffectSeParam>() }),
        ("HitEffectSfxConceptParam".to_string(), unsafe { get_lambda::<HitEffectSfxConceptParam>() }),
        ("HitEffectSfxParam".to_string(), unsafe { get_lambda::<HitEffectSfxParam>() }),
        ("HitMtrlParam".to_string(), unsafe { get_lambda::<HitMtrlParam>() }),
        ("HPEstusFlaskRecoveryParam".to_string(), unsafe { get_lambda::<HPEstusFlaskRecoveryParam>() }),
        ("ItemLotParam".to_string(), unsafe { get_lambda::<ItemLotParam>() }),
        ("KnockBackParam".to_string(), unsafe { get_lambda::<KnockBackParam>() }),
        ("KnowledgeLoadScreenItemParam".to_string(), unsafe { get_lambda::<KnowledgeLoadScreenItemParam>() }),
        ("LoadBalancerDrawDistScaleParam".to_string(), unsafe { get_lambda::<LoadBalancerDrawDistScaleParam>() }),
        ("LoadBalancerParam".to_string(), unsafe { get_lambda::<LoadBalancerParam>() }),
        ("LockCamParam".to_string(), unsafe { get_lambda::<LockCamParam>() }),
        ("LodParam".to_string(), unsafe { get_lambda::<LodParam>() }),
        ("LodParam_ps4".to_string(), unsafe { get_lambda::<LodParam_ps4>() }),
        ("LodParam_xb1".to_string(), unsafe { get_lambda::<LodParam_xb1>() }),
        ("Magic".to_string(), unsafe { get_lambda::<Magic>() }),
        ("MapMimicryEstablishmentParam".to_string(), unsafe { get_lambda::<MapMimicryEstablishmentParam>() }),
        ("MenuOffscrRendParam".to_string(), unsafe { get_lambda::<MenuOffscrRendParam>() }),
        ("MenuPropertyLayoutParam".to_string(), unsafe { get_lambda::<MenuPropertyLayoutParam>() }),
        ("MenuPropertySpecParam".to_string(), unsafe { get_lambda::<MenuPropertySpecParam>() }),
        ("MenuValueTableParam".to_string(), unsafe { get_lambda::<MenuValueTableParam>() }),
        ("ModelSfxParam".to_string(), unsafe { get_lambda::<ModelSfxParam>() }),
        ("MoveParam".to_string(), unsafe { get_lambda::<MoveParam>() }),
        ("MPEstusFlaskRecoveryParam".to_string(), unsafe { get_lambda::<MPEstusFlaskRecoveryParam>() }),
        ("MultiHPEstusFlaskBonusParam".to_string(), unsafe { get_lambda::<MultiHPEstusFlaskBonusParam>() }),
        ("MultiMPEstusFlaskBonusParam".to_string(), unsafe { get_lambda::<MultiMPEstusFlaskBonusParam>() }),
        ("MultiPlayCorrectionParam".to_string(), unsafe { get_lambda::<MultiPlayCorrectionParam>() }),
        ("MultiSoulBonusRateParam".to_string(), unsafe { get_lambda::<MultiSoulBonusRateParam>() }),
        ("NetworkAreaParam".to_string(), unsafe { get_lambda::<NetworkAreaParam>() }),
        ("NetworkMsgParam".to_string(), unsafe { get_lambda::<NetworkMsgParam>() }),
        ("NetworkParam".to_string(), unsafe { get_lambda::<NetworkParam>() }),
        ("NewMenuColorTableParam".to_string(), unsafe { get_lambda::<NewMenuColorTableParam>() }),
        ("NpcAiActionParam".to_string(), unsafe { get_lambda::<NpcAiActionParam>() }),
        ("NpcParam".to_string(), unsafe { get_lambda::<NpcParam>() }),
        ("NpcThinkParam".to_string(), unsafe { get_lambda::<NpcThinkParam>() }),
        ("ObjActParam".to_string(), unsafe { get_lambda::<ObjActParam>() }),
        ("ObjectMaterialSfxParam".to_string(), unsafe { get_lambda::<ObjectMaterialSfxParam>() }),
        ("ObjectParam".to_string(), unsafe { get_lambda::<ObjectParam>() }),
        ("PhantomParam".to_string(), unsafe { get_lambda::<PhantomParam>() }),
        ("PlayRegionParam".to_string(), unsafe { get_lambda::<PlayRegionParam>() }),
        ("ProtectorGenParam".to_string(), unsafe { get_lambda::<ProtectorGenParam>() }),
        ("RagdollParam".to_string(), unsafe { get_lambda::<RagdollParam>() }),
        ("ReinforceParamProtector".to_string(), unsafe { get_lambda::<ReinforceParamProtector>() }),
        ("ReinforceParamWeapon".to_string(), unsafe { get_lambda::<ReinforceParamWeapon>() }),
        ("RoleParam".to_string(), unsafe { get_lambda::<RoleParam>() }),
        ("SeMaterialConvertParam".to_string(), unsafe { get_lambda::<SeMaterialConvertParam>() }),
        ("ShopLineupParam".to_string(), unsafe { get_lambda::<ShopLineupParam>() }),
        ("SkeletonParam".to_string(), unsafe { get_lambda::<SkeletonParam>() }),
        ("SpEffectParam".to_string(), unsafe { get_lambda::<SpEffectParam>() }),
        ("SpEffectVfxParam".to_string(), unsafe { get_lambda::<SpEffectVfxParam>() }),
        ("SwordArtsParam".to_string(), unsafe { get_lambda::<SwordArtsParam>() }),
        ("TalkParam".to_string(), unsafe { get_lambda::<TalkParam>() }),
        ("ThrowDirectionSfxParam".to_string(), unsafe { get_lambda::<ThrowDirectionSfxParam>() }),
        ("ThrowParam".to_string(), unsafe { get_lambda::<ThrowParam>() }),
        ("ToughnessParam".to_string(), unsafe { get_lambda::<ToughnessParam>() }),
        ("UpperArmParam".to_string(), unsafe { get_lambda::<UpperArmParam>() }),
        ("WeaponGenParam".to_string(), unsafe { get_lambda::<WeaponGenParam>() }),
        ("WepAbsorpPosParam".to_string(), unsafe { get_lambda::<WepAbsorpPosParam>() }),
        ("WetAspectParam".to_string(), unsafe { get_lambda::<WetAspectParam>() }),
        ("WhiteSignCoolTimeParam".to_string(), unsafe { get_lambda::<WhiteSignCoolTimeParam>() }),
        ("Wind".to_string(), unsafe { get_lambda::<Wind>() }),
    ].into_iter().collect()
});
#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ActionButtonParam {
    pub region_type: u8,
    pub pad1: [u8; 3],
    pub dummy_poly1: i32,
    pub dummy_poly2: i32,
    pub radius: f32,
    pub angle: i32,
    pub depth: f32,
    pub width: f32,
    pub height: f32,
    pub base_height_offset: f32,
    pub angle_check_type: u8,
    pub pad2: [u8; 3],
    pub allow_angle: i32,
    pub text_box_type: u8,
    pub pad3: [u8; 3],
    pub text_id: i32,
    pub invalid_flag: i32,
    pub grayout_flag: i32,
    pub priority: i32,
    pub exec_invalid_time: f32,
    pub exec_button_circle: u8,
    pub pad4: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AiSoundParam {
    pub radius: f32,
    pub life_frame: f32,
    pub b_sp_effect_enable: u8,
    pub ty: u8,
    pub fake_target_type: u8,
    pub interest_category: u8,
    pub use_hit_damage_team: u8,
    pub pad: [u8; 19],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AtkParam_Npc {
    pub hit0_radius: f32,
    pub hit1_radius: f32,
    pub hit2_radius: f32,
    pub hit3_radius: f32,
    pub knockback_dist: f32,
    pub hit_stop_time: f32,
    pub sp_effect0: i32,
    pub sp_effect1: i32,
    pub sp_effect2: i32,
    pub sp_effect3: i32,
    pub sp_effect4: i32,
    pub hit0_dmy_poly1: i16,
    pub hit1_dmy_poly1: i16,
    pub hit2_dmy_poly1: i16,
    pub hit3_dmy_poly1: i16,
    pub hit0_dmy_poly2: i16,
    pub hit1_dmy_poly2: i16,
    pub hit2_dmy_poly2: i16,
    pub hit3_dmy_poly2: i16,
    pub blowing: i16,
    pub atk_phys_correction: i16,
    pub atk_mag_correction: i16,
    pub atk_fire_correction: i16,
    pub atk_thun_correction: i16,
    pub atk_stam_correction: i16,
    pub guard_atk_rate_correction: i16,
    pub guard_break_correction: i16,
    pub atk_throw_escape_correction: i16,
    pub atk_super_armor_correction: i16,
    pub atk_phys: i16,
    pub atk_mag: i16,
    pub atk_fire: i16,
    pub atk_thun: i16,
    pub atk_stam: i16,
    pub guard_atk_rate: i16,
    pub guard_break_rate: i16,
    pub atk_super_armor: i16,
    pub atk_throw_escape: i16,
    pub atk_obj: i16,
    pub guard_stamina_cut_rate: i16,
    pub guard_rate: i16,
    pub throw_type_id: i16,
    pub hit0_hit_type: u8,
    pub hit1_hit_type: u8,
    pub hit2_hit_type: u8,
    pub hit3_hit_type: u8,
    pub hit0_priority: u8,
    pub hit1_priority: u8,
    pub hit2_priority: u8,
    pub hit3_priority: u8,
    pub damage_level: u8,
    pub map_hit_type: u8,
    pub guard_cut_cancel_rate: u8,
    pub atk_attribute: i8,
    pub sp_attribute: i8,
    pub atk_type: i8,
    pub atk_material: i8,
    pub atk_size: i8,
    pub def_material: i8,
    pub def_sfx_material: i8,
    pub hit_source_type: u8,
    pub throw_flag: u8,
    #[bitflag(disableGuard, 0)]
    #[bitflag(disableStaminaAttack, 1)]
    #[bitflag(disableHitSpEffect, 2)]
    #[bitflag(IgnoreNotifyMissSwingForAI, 3)]
    #[bitflag(repeatHitSfx, 4)]
    #[bitflag(IsArrowAtk, 5)]
    #[bitflag(IsGhostAtk, 6)]
    #[bitflag(isDisableNoDamage, 7)]
    pub bitfield0: u8,
    pub atk_pow_for_sfx_se: u8,
    pub atk_dir_for_sfx_se: u8,
    #[bitflag(opposeTarget, 0)]
    #[bitflag(friendlyTarget, 1)]
    #[bitflag(selfTarget, 2)]
    #[bitflag(isChargeAtk, 3)]
    #[bitflag(isShareHitList, 4)]
    #[bitflag(isCheckObjPenetration, 5)]
    #[bitflag(field0x81, 6)]
    #[bitflag(field0x81_0, 7)]
    pub bitfield1: u8,
    pub pad1: u8,
    pub regainable_slot_id: u8,
    pub death_cause_id: i32,
    pub decal_id1: i32,
    pub decal_id2: i32,
    pub spawn_ai_sound_id: i32,
    pub hit_ai_sound_id: i32,
    pub rumble_id0: i32,
    pub rumble_id1: i32,
    pub rumble_id2: i32,
    pub rumble_id3: i32,
    pub hit0_vfx_id: i32,
    pub hit0_dummy_poly_id0: i32,
    pub hit0_dummy_poly_id1: i32,
    pub hit1_vfx_id1: i32,
    pub hit1_dummy_poly_id0: i32,
    pub hit1_dummy_poly_id1: i32,
    pub hit2_vfx_id: i32,
    pub hit2_dummy_poly_id0: i32,
    pub hit2_dummy_poly_id1: i32,
    pub hit3_vfx_id: i32,
    pub hit3_dummy_poly_id0: i32,
    pub hit3_dummy_poly_id1: i32,
    pub hit4_vfx_id: i32,
    pub hit4_dummy_poly_id0: i32,
    pub hit4_dummy_poly_id1: i32,
    pub hit5_vfx_id: i32,
    pub hit5_dummy_poly_id0: i32,
    pub hit5_dummy_poly_id1: i32,
    pub hit6_vfx_id: i32,
    pub hit6_dummy_poly_id0: i32,
    pub hit6_dummy_poly_id1: i32,
    pub hit7_vfx_id: i32,
    pub hit7_dummy_poly_id0: i32,
    pub hit7_dummy_poly_id1: i32,
    pub hit4_radius: f32,
    pub hit5_radius: f32,
    pub hit6_radius: f32,
    pub hit7_radius: f32,
    pub hit8_radius: f32,
    pub hit9_radius: f32,
    pub hit10_radius: f32,
    pub hit11_radius: f32,
    pub hit12_radius: f32,
    pub hit13_radius: f32,
    pub hit14_radius: f32,
    pub hit15_radius: f32,
    pub hit4_dmy_poly1: i16,
    pub hit5_dmy_poly1: i16,
    pub hit6_dmy_poly1: i16,
    pub hit7_dmy_poly1: i16,
    pub hit8_dmy_poly1: i16,
    pub hit9_dmy_poly1: i16,
    pub hit10_dmy_poly1: i16,
    pub hit11_dmy_poly1: i16,
    pub hit12_dmy_poly1: i16,
    pub hit13_dmy_poly1: i16,
    pub hit14_dmy_poly1: i16,
    pub hit15_dmy_poly1: i16,
    pub hit4_dmy_poly2: i16,
    pub hit5_dmy_poly2: i16,
    pub hit6_dmy_poly2: i16,
    pub hit7_dmy_poly2: i16,
    pub hit8_dmy_poly2: i16,
    pub hit9_dmy_poly2: i16,
    pub hit10_dmy_poly2: i16,
    pub hit11_dmy_poly2: i16,
    pub hit12_dmy_poly2: i16,
    pub hit13_dmy_poly2: i16,
    pub hit14_dmy_poly2: i16,
    pub hit15_dmy_poly2: i16,
    pub hit4_hit_type: u8,
    pub hit5_hit_type: u8,
    pub hit6_hit_type: u8,
    pub hit7_hit_type: u8,
    pub hit8_hit_type: u8,
    pub hit9_hit_type: u8,
    pub hit10_hit_type: u8,
    pub hit11_hit_type: u8,
    pub hit12_hit_type: u8,
    pub hit13_hit_type: u8,
    pub hit14_hit_type: u8,
    pub hit15_hit_type: u8,
    pub field0x174: i32,
    pub field0x178: i32,
    pub field0x17_c: i32,
    pub def_material_val0: i16,
    pub def_material_val1: i16,
    pub def_material_val2: i16,
    pub atk_dark_correction: i16,
    pub atk_dark: i16,
    #[bitflag(IsChargeAtk2, 0)]
    #[bitflag(IsChargeAtk3, 1)]
    #[bitflag(field0x18A, 2)]
    #[bitflag(field0x18A_0, 3)]
    #[bitflag(field0x18A_1, 4)]
    #[bitflag(field0x18A_2, 5)]
    #[bitflag(field0x18A_3, 6)]
    #[bitflag(field0x18A_4, 7)]
    pub bitfield2: u8,
    pub field0x18_b: u8,
    pub phys_sp_correction: i16,
    pub mag_sp_correction: i16,
    pub fire_sp_correction: i16,
    pub thun_sp_correction: i16,
    pub damage_level_parameter: u8,
    pub field0x195: u8,
    pub dark_sp_correction: i16,
    pub atk_element_correct_id: i32,
    pub pad2: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AtkParam_Pc {
    pub hit0_radius: f32,
    pub hit1_radius: f32,
    pub hit2_radius: f32,
    pub hit3_radius: f32,
    pub knockback_dist: f32,
    pub hit_stop_time: f32,
    pub sp_effect0: i32,
    pub sp_effect1: i32,
    pub sp_effect2: i32,
    pub sp_effect3: i32,
    pub sp_effect4: i32,
    pub hit0_dmy_poly1: i16,
    pub hit1_dmy_poly1: i16,
    pub hit2_dmy_poly1: i16,
    pub hit3_dmy_poly1: i16,
    pub hit0_dmy_poly2: i16,
    pub hit1_dmy_poly2: i16,
    pub hit2_dmy_poly2: i16,
    pub hit3_dmy_poly2: i16,
    pub blowing: i16,
    pub atk_phys_correction: i16,
    pub atk_mag_correction: i16,
    pub atk_fire_correction: i16,
    pub atk_thun_correction: i16,
    pub atk_stam_correction: i16,
    pub guard_atk_rate_correction: i16,
    pub guard_break_correction: i16,
    pub atk_throw_escape_correction: i16,
    pub atk_super_armor_correction: i16,
    pub atk_phys: i16,
    pub atk_mag: i16,
    pub atk_fire: i16,
    pub atk_thun: i16,
    pub atk_stam: i16,
    pub guard_atk_rate: i16,
    pub guard_break_rate: i16,
    pub atk_super_armor: i16,
    pub atk_throw_escape: i16,
    pub atk_obj: i16,
    pub guard_stamina_cut_rate: i16,
    pub guard_rate: i16,
    pub throw_type_id: i16,
    pub hit0_hit_type: u8,
    pub hit1_hit_type: u8,
    pub hit2_hit_type: u8,
    pub hit3_hit_type: u8,
    pub hit0_priority: u8,
    pub hit1_priority: u8,
    pub hit2_priority: u8,
    pub hit3_priority: u8,
    pub damage_level: u8,
    pub map_hit_type: u8,
    pub guard_cut_cancel_rate: u8,
    pub atk_attribute: i8,
    pub sp_attribute: i8,
    pub atk_type: i8,
    pub atk_material: i8,
    pub atk_size: i8,
    pub def_material: i8,
    pub def_sfx_material: i8,
    pub hit_source_type: u8,
    pub throw_flag: u8,
    #[bitflag(disableGuard, 0)]
    #[bitflag(disableStaminaAttack, 1)]
    #[bitflag(disableHitSpEffect, 2)]
    #[bitflag(IgnoreNotifyMissSwingForAI, 3)]
    #[bitflag(repeatHitSfx, 4)]
    #[bitflag(IsArrowAtk, 5)]
    #[bitflag(IsGhostAtk, 6)]
    #[bitflag(isDisableNoDamage, 7)]
    pub bitfield0: u8,
    pub atk_pow_for_sfx_se: u8,
    pub atk_dir_for_sfx_se: u8,
    #[bitflag(opposeTarget, 0)]
    #[bitflag(friendlyTarget, 1)]
    #[bitflag(selfTarget, 2)]
    #[bitflag(isChargeAtk, 3)]
    #[bitflag(isShareHitList, 4)]
    #[bitflag(isCheckObjPenetration, 5)]
    #[bitflag(field0x81, 6)]
    #[bitflag(field0x81_0, 7)]
    pub bitfield1: u8,
    pub pad1: u8,
    pub regainable_slot_id: u8,
    pub death_cause_id: i32,
    pub decal_id1: i32,
    pub decal_id2: i32,
    pub spawn_ai_sound_id: i32,
    pub hit_ai_sound_id: i32,
    pub rumble_id0: i32,
    pub rumble_id1: i32,
    pub rumble_id2: i32,
    pub rumble_id3: i32,
    pub hit0_vfx_id: i32,
    pub hit0_dummy_poly_id0: i32,
    pub hit0_dummy_poly_id1: i32,
    pub hit1_vfx_id1: i32,
    pub hit1_dummy_poly_id0: i32,
    pub hit1_dummy_poly_id1: i32,
    pub hit2_vfx_id: i32,
    pub hit2_dummy_poly_id0: i32,
    pub hit2_dummy_poly_id1: i32,
    pub hit3_vfx_id: i32,
    pub hit3_dummy_poly_id0: i32,
    pub hit3_dummy_poly_id1: i32,
    pub hit4_vfx_id: i32,
    pub hit4_dummy_poly_id0: i32,
    pub hit4_dummy_poly_id1: i32,
    pub hit5_vfx_id: i32,
    pub hit5_dummy_poly_id0: i32,
    pub hit5_dummy_poly_id1: i32,
    pub hit6_vfx_id: i32,
    pub hit6_dummy_poly_id0: i32,
    pub hit6_dummy_poly_id1: i32,
    pub hit7_vfx_id: i32,
    pub hit7_dummy_poly_id0: i32,
    pub hit7_dummy_poly_id1: i32,
    pub hit4_radius: f32,
    pub hit5_radius: f32,
    pub hit6_radius: f32,
    pub hit7_radius: f32,
    pub hit8_radius: f32,
    pub hit9_radius: f32,
    pub hit10_radius: f32,
    pub hit11_radius: f32,
    pub hit12_radius: f32,
    pub hit13_radius: f32,
    pub hit14_radius: f32,
    pub hit15_radius: f32,
    pub hit4_dmy_poly1: i16,
    pub hit5_dmy_poly1: i16,
    pub hit6_dmy_poly1: i16,
    pub hit7_dmy_poly1: i16,
    pub hit8_dmy_poly1: i16,
    pub hit9_dmy_poly1: i16,
    pub hit10_dmy_poly1: i16,
    pub hit11_dmy_poly1: i16,
    pub hit12_dmy_poly1: i16,
    pub hit13_dmy_poly1: i16,
    pub hit14_dmy_poly1: i16,
    pub hit15_dmy_poly1: i16,
    pub hit4_dmy_poly2: i16,
    pub hit5_dmy_poly2: i16,
    pub hit6_dmy_poly2: i16,
    pub hit7_dmy_poly2: i16,
    pub hit8_dmy_poly2: i16,
    pub hit9_dmy_poly2: i16,
    pub hit10_dmy_poly2: i16,
    pub hit11_dmy_poly2: i16,
    pub hit12_dmy_poly2: i16,
    pub hit13_dmy_poly2: i16,
    pub hit14_dmy_poly2: i16,
    pub hit15_dmy_poly2: i16,
    pub hit4_hit_type: u8,
    pub hit5_hit_type: u8,
    pub hit6_hit_type: u8,
    pub hit7_hit_type: u8,
    pub hit8_hit_type: u8,
    pub hit9_hit_type: u8,
    pub hit10_hit_type: u8,
    pub hit11_hit_type: u8,
    pub hit12_hit_type: u8,
    pub hit13_hit_type: u8,
    pub hit14_hit_type: u8,
    pub hit15_hit_type: u8,
    pub field0x174: i32,
    pub field0x178: i32,
    pub field0x17_c: i32,
    pub def_material_val0: i16,
    pub def_material_val1: i16,
    pub def_material_val2: i16,
    pub atk_dark_correction: i16,
    pub atk_dark: i16,
    #[bitflag(IsChargeAtk2, 0)]
    #[bitflag(IsChargeAtk3, 1)]
    #[bitflag(field0x18A, 2)]
    #[bitflag(field0x18A_0, 3)]
    #[bitflag(field0x18A_1, 4)]
    #[bitflag(field0x18A_2, 5)]
    #[bitflag(field0x18A_3, 6)]
    #[bitflag(field0x18A_4, 7)]
    pub bitfield2: u8,
    pub field0x18_b: u8,
    pub phys_sp_correction: i16,
    pub mag_sp_correction: i16,
    pub fire_sp_correction: i16,
    pub thun_sp_correction: i16,
    pub damage_level_parameter: u8,
    pub field0x195: u8,
    pub dark_sp_correction: i16,
    pub atk_element_correct_id: i32,
    pub pad2: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AttackElementCorrectParam {
    #[bitflag(field0x00, 0)]
    #[bitflag(field0x00_0, 1)]
    #[bitflag(field0x00_1, 2)]
    #[bitflag(field0x00_2, 3)]
    #[bitflag(field0x00_3, 4)]
    #[bitflag(field0x00_4, 5)]
    #[bitflag(field0x00_5, 6)]
    #[bitflag(field0x00_6, 7)]
    #[bitflag(field0x00_7, 8)]
    #[bitflag(field0x00_8, 9)]
    #[bitflag(field0x00_9, 10)]
    #[bitflag(field0x00_10, 11)]
    #[bitflag(field0x00_11, 12)]
    #[bitflag(field0x00_12, 13)]
    #[bitflag(field0x00_13, 14)]
    #[bitflag(field0x00_14, 15)]
    #[bitflag(field0x00_15, 16)]
    #[bitflag(field0x00_16, 17)]
    #[bitflag(field0x00_17, 18)]
    #[bitflag(field0x00_18, 19)]
    #[bitflag(field0x00_19, 20)]
    #[bitflag(field0x00_20, 21)]
    #[bitflag(field0x00_21, 22)]
    #[bitflag(field0x00_22, 23)]
    #[bitflag(field0x00_23, 24)]
    #[bitflag(field0x00_24, 25)]
    #[bitflag(field0x00_25, 26)]
    #[bitflag(field0x00_26, 27)]
    #[bitflag(field0x00_27, 28)]
    #[bitflag(field0x00_28, 29)]
    #[bitflag(field0x00_29, 30)]
    #[bitflag(field0x00_30, 31)]
    pub bitfield0: u32,
    pub add_rate0: i16,
    pub add_rate1: i16,
    pub add_rate2: i16,
    pub add_rate3: i16,
    pub add_rate4: i16,
    pub add_rate5: i16,
    pub add_rate6: i16,
    pub add_rate7: i16,
    pub add_rate8: i16,
    pub add_rate9: i16,
    pub add_rate10: i16,
    pub add_rate11: i16,
    pub add_rate12: i16,
    pub add_rate13: i16,
    pub add_rate14: i16,
    pub add_rate15: i16,
    pub add_rate16: i16,
    pub add_rate17: i16,
    pub add_rate18: i16,
    pub add_rate19: i16,
    pub add_rate20: i16,
    pub add_rate21: i16,
    pub add_rate22: i16,
    pub add_rate23: i16,
    pub add_rate24: i16,
    pub corr_rate0: i16,
    pub corr_rate1: i16,
    pub corr_rate2: i16,
    pub corr_rate3: i16,
    pub corr_rate4: i16,
    pub corr_rate5: i16,
    pub corr_rate6: i16,
    pub corr_rate7: i16,
    pub corr_rate8: i16,
    pub corr_rate9: i16,
    pub corr_rate10: i16,
    pub corr_rate11: i16,
    pub corr_rate12: i16,
    pub corr_rate13: i16,
    pub corr_rate14: i16,
    pub corr_rate15: i16,
    pub corr_rate16: i16,
    pub corr_rate17: i16,
    pub corr_rate18: i16,
    pub corr_rate19: i16,
    pub corr_rate20: i16,
    pub corr_rate21: i16,
    pub corr_rate22: i16,
    pub corr_rate23: i16,
    pub corr_rate24: i16,
    pub pad1: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BehaviorParam {
    pub variation_id: i32,
    pub behavior_judge_id: i32,
    pub ez_state_behavior_type_old: u8,
    pub ref_type: u8,
    pub pad1: [u8; 2],
    pub ref_id: i32,
    pub sfx_variation_id: i32,
    pub stamina: i32,
    pub mp: i32,
    pub category: u8,
    pub hero_point: u8,
    pub pad2: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BehaviorParam_PC {
    pub variation_id: i32,
    pub behavior_judge_id: i32,
    pub ez_state_behavior_type_old: u8,
    pub ref_type: u8,
    pub pad1: [u8; 2],
    pub ref_id: i32,
    pub sfx_variation_id: i32,
    pub stamina: i32,
    pub mp: i32,
    pub category: u8,
    pub hero_point: u8,
    pub pad2: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BonfireWarpParam {
    pub location_event_id: i32,
    pub warp_event_id: i32,
    pub bonfire_name_id: i32,
    pub description_text_id: i32,
    pub picture_id: i32,
    pub list_id: u8,
    pub is_disable_quickwarp: u8,
    pub ceremony_id: i16,
    pub online_area_id: i32,
    pub pad1: [u8; 36],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BudgetParam {
    pub memory_budget0: f32,
    pub memory_budget1: f32,
    pub memory_budget2: f32,
    pub memory_budget3: f32,
    pub memory_budget4: f32,
    pub memory_budget5: f32,
    pub memory_budget6: f32,
    pub memory_budget7: f32,
    pub memory_budget8: f32,
    pub memory_budget9: f32,
    pub memory_budget10: f32,
    pub memory_budget11: f32,
    pub memory_budget12: f32,
    pub memory_budget13: f32,
    pub memory_budget14: f32,
    pub memory_budget15: f32,
    pub memory_budget16: f32,
    pub memory_budget17: f32,
    pub memory_budget18: f32,
    pub memory_budget19: f32,
    pub memory_budget20: f32,
    pub memory_budget21: f32,
    pub memory_budget22: f32,
    pub memory_budget23: f32,
    pub memory_budget24: f32,
    pub memory_budget25: f32,
    pub pad1: [u8; 28],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Bullet {
    pub atk_bullet_id: i32,
    pub sfx_id_bullet: i32,
    pub sfx_id_hit: i32,
    pub sfx_id_flick: i32,
    pub life: f32,
    pub dist: f32,
    pub shoot_interval: f32,
    pub gravity_in_range: f32,
    pub gravity_out_range: f32,
    pub homing_stop_range: f32,
    pub init_vellocity: f32,
    pub accel_in_range: f32,
    pub accel_out_range: f32,
    pub max_vellocity: f32,
    pub min_vellocity: f32,
    pub accel_time: f32,
    pub homing_begin_dist: f32,
    pub hit_radius: f32,
    pub hit_radius_max: f32,
    pub spread_time: f32,
    pub exp_delay: f32,
    pub homing_offset_range: f32,
    pub dmg_hit_record_life_time: f32,
    pub external_force: f32,
    pub sp_effect_id_for_shooter: i32,
    pub auto_search_npc_think_id: i32,
    pub hit_bullet_id: i32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub num_shoot: i16,
    pub homing_angle: i16,
    pub shoot_angle: i16,
    pub shoot_angle_interval: i16,
    pub shoot_angle_xinterval: i16,
    pub damage_damp: u8,
    pub magic_damage_damp: u8,
    pub fire_damage_damp: u8,
    pub thunder_damage_damp: u8,
    pub stamina_damp: u8,
    pub knockback_damp: u8,
    pub shoot_angle_xz: u8,
    pub lock_shoot_limit_ang: u8,
    pub is_penetrate: u8,
    pub prev_vellocity_dir_rate: u8,
    pub atk_attribute: u8,
    pub sp_attribute: u8,
    pub material_attack_type: u8,
    pub material_attack_material: u8,
    pub material_size: u8,
    pub launch_condition_type: u8,
    #[bitflag(FollowType0, 0)]
    #[bitflag(FollowType1, 1)]
    #[bitflag(FollowType2, 2)]
    #[bitflag(EmittePosType0, 3)]
    #[bitflag(EmittePosType1, 4)]
    #[bitflag(EmittePosType2, 5)]
    #[bitflag(IsAttackSfx, 6)]
    #[bitflag(IsEndlessHit, 7)]
    pub bitfield0: u8,
    #[bitflag(IsPenetrateMap, 0)]
    #[bitflag(IsHitBothTeam, 1)]
    #[bitflag(IsUseShardHitList, 2)]
    #[bitflag(IsUseMultiDmyPolyIfPlace, 3)]
    #[bitflag(attachEffectType0, 4)]
    #[bitflag(attachEffectType1, 5)]
    #[bitflag(IsHitForceMagic, 6)]
    #[bitflag(IsIgnoreSfxIfHitWater, 7)]
    pub bitfield1: u8,
    #[bitflag(IsIgnoreMoveStateIfHitWater, 0)]
    #[bitflag(IsHitDarkForceMagic, 1)]
    #[bitflag(IsInheritEffectToChild, 2)]
    #[bitflag(IsInheritSpeedToChild, 3)]
    #[bitflag(IsLockModule, 4)]
    #[bitflag(IsSearchForTarget, 5)]
    #[bitflag(IsEmittedBullet, 6)]
    #[bitflag(IsInheritLifeToChild, 7)]
    pub bitfield2: u8,
    pub dark_damage_damp: u8,
    pub bullet_hit_type0: u8,
    pub bullet_hit_type1: u8,
    pub sp_homing_yangle: f32,
    pub rand_shoot_angle_xz: f32,
    pub rand_shoot_angle_y: f32,
    pub bullet_emitter_bullet_id: i32,
    pub bullet_emitter_shoot_interval0: f32,
    pub bullet_emitter_init_interval: f32,
    pub sp_homing_yangle_for_enemy: f32,
    pub bullet_emitter_shoot_interval1: f32,
    pub launch_type: u8,
    pub limit_bullet_param_id: u8,
    pub counter_hit_type: u8,
    #[bitflag(IsPosHitBullet, 0)]
    #[bitflag(IsAttachAttackSfx, 1)]
    #[bitflag(IsSpCorrection0, 2)]
    #[bitflag(IsSpCorrection1, 3)]
    #[bitflag(IsPenetrateTarget, 4)]
    #[bitflag(IsSpCorrection2, 5)]
    #[bitflag(IsDisableIntScale, 6)]
    #[bitflag(field0xC3, 7)]
    pub bitfield3: u8,
    pub emitte_pos_radius: f32,
    pub hit_object_id: i32,
    pub sub_life: f32,
    pub sub_homing_angle: i16,
    pub pad1: [u8; 2],
    pub lock_shoot_correction_ang: f32,
    pub pad2: [u8; 40],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BulletCreateLimitParam {
    pub max_ammount: u8,
    pub pad1: [u8; 31],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CalcCorrectGraph {
    pub stage_max_val0: f32,
    pub stage_max_val1: f32,
    pub stage_max_val2: f32,
    pub stage_max_val3: f32,
    pub stage_max_val4: f32,
    pub stage_max_grow_val0: f32,
    pub stage_max_grow_val1: f32,
    pub stage_max_grow_val2: f32,
    pub stage_max_grow_val3: f32,
    pub stage_max_grow_val4: f32,
    pub adj_pt_max_grow_val0: f32,
    pub adj_pt_max_grow_val1: f32,
    pub adj_pt_max_grow_val2: f32,
    pub adj_pt_max_grow_val3: f32,
    pub adj_pt_max_grow_val4: f32,
    pub init_inclination_soul: f32,
    pub adjustment_value: f32,
    pub boundry_inclination_soul: f32,
    pub boundry_value: f32,
    pub pad1: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Ceremony {
    pub event_layer_id: i32,
    pub map_studio_layer_id: i32,
    pub gparam_id: i16,
    pub gparam_id_0: i16,
    pub point: i32,
    pub g_i_texture_id: i32,
    pub light: i32,
    pub is_reload: u8,
    pub is_disable_online: u8,
    pub pad1: [u8; 10],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharacterLoadParam {
    pub chr_bnd_type: u8,
    pub ani_bnd_type: u8,
    pub tex_bnd_type: u8,
    pub beh_bnd_type: u8,
    pub snd_chr_type: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharaInitParam {
    pub base_rec_mp: f32,
    pub base_rec_sp: f32,
    pub red_falldam: f32,
    pub soul: i32,
    pub equip_wep_right: i32,
    pub equip_subwep_right: i32,
    pub equip_wep_left: i32,
    pub equip_subwep_left: i32,
    pub equip_helm: i32,
    pub equip_armor: i32,
    pub equip_gaunt: i32,
    pub equip_leg: i32,
    pub equip_arrow: i32,
    pub equip_bolt: i32,
    pub equip_sub_arrow: i32,
    pub equip_sub_bolt: i32,
    pub equip_accessory1: i32,
    pub equip_accessory2: i32,
    pub equip_accessory3: i32,
    pub equip_accessory4: i32,
    pub equip_accessory5: i32,
    pub equip_skill_01: i32,
    pub equip_skill_02: i32,
    pub equip_skill_03: i32,
    pub equip_spell_01: i32,
    pub equip_spell_02: i32,
    pub equip_spell_03: i32,
    pub equip_spell_04: i32,
    pub equip_spell_05: i32,
    pub equip_spell_06: i32,
    pub equip_spell_07: i32,
    pub item_01: i32,
    pub item_02: i32,
    pub item_03: i32,
    pub item_04: i32,
    pub item_05: i32,
    pub item_06: i32,
    pub item_07: i32,
    pub item_08: i32,
    pub item_09: i32,
    pub item_10: i32,
    pub npc_player_face_gen_id: i32,
    pub npc_player_think_id: i32,
    pub base_hp: i16,
    pub base_mp: i16,
    pub base_sp: i16,
    pub arrow_num: i16,
    pub bolt_num: i16,
    pub sub_arrow_num: i16,
    pub sub_bolt_num: i16,
    pub q_wc_sb: i16,
    pub q_wc_mw: i16,
    pub q_wc_cd: i16,
    pub soul_lvl: i16,
    pub base_vit: i8,
    pub base_wil: i8,
    pub base_end: i8,
    pub base_str: i8,
    pub base_dex: i8,
    pub base_mag: i8,
    pub base_fai: i8,
    pub base_luc: i8,
    pub base_hero_point: i8,
    pub base_durability: i8,
    pub item_num_01: u8,
    pub item_num_02: u8,
    pub item_num_03: u8,
    pub item_num_04: u8,
    pub item_num_05: u8,
    pub item_num_06: u8,
    pub item_num_07: u8,
    pub item_num_08: u8,
    pub item_num_09: u8,
    pub item_num_10: u8,
    pub body_scale_head: u8,
    pub body_scale_breast: u8,
    pub body_scale_abdomen: u8,
    pub body_scale_arm: u8,
    pub body_scale_leg: u8,
    pub gestureid0: u8,
    pub gestureid1: u8,
    pub gestureid2: u8,
    pub gestureid3: u8,
    pub gestureid4: u8,
    pub gestureid5: u8,
    pub gestureid6: u8,
    pub npc_player_type: u8,
    pub npc_player_draw_type: u8,
    pub npc_player_sex: u8,
    pub vow_type: u8,
    pub voice_type: u8,
    pub pad1: [u8; 1],
    pub equip_wep_right_gen_id: i32,
    pub equip_subwep_right_gen_id: i32,
    pub equip_wep_left_gen_id: i32,
    pub equip_subwep_left_gen_id: i32,
    pub equip_helm_gen_id: i32,
    pub equip_armor_gen_id: i32,
    pub equip_gaunt_gen_id: i32,
    pub equip_leg_gen_id: i32,
    pub equip_wep_body_gen_id: i32,
    pub secondary_item_01: i32,
    pub secondary_item_02: i32,
    pub secondary_item_03: i32,
    pub secondary_item_04: i32,
    pub secondary_item_05: i32,
    pub secondary_item_06: i32,
    pub secondary_item_07: i32,
    pub secondary_item_08: i32,
    pub secondary_item_num_01: u8,
    pub secondary_item_num_02: u8,
    pub secondary_item_num_03: u8,
    pub secondary_item_num_04: u8,
    pub secondary_item_num_05: u8,
    pub secondary_item_num_06: u8,
    pub secondary_item_num_07: u8,
    pub secondary_item_num_08: u8,
    pub pad2: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharMakeMenuListItemParam {
    pub value: i32,
    pub caption_id: i32,
    pub icon_id: u8,
    pub pad1: [u8; 7],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharMakeMenuTopParam {
    pub command_id: i32,
    pub face_param_id: i32,
    pub table_id: i32,
    pub view_condition: i32,
    pub preview_mode: u8,
    pub pad1: [u8; 3],
    pub menu_type: i8,
    pub pad2: [u8; 11],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ClearCountCorrectParam {
    pub h_p: f32,
    pub mana: f32,
    pub stamina: f32,
    pub phys_dmg: f32,
    pub slash_dmg: f32,
    pub blow_dmg: f32,
    pub thrust_dmg: f32,
    pub neutral: f32,
    pub magic_dmg: f32,
    pub fire_dmg: f32,
    pub thunder_dmg: f32,
    pub dark_dmg: f32,
    pub phys_resist: f32,
    pub magic_resist: f32,
    pub fire_resist: f32,
    pub thunder_resist: f32,
    pub dark_resist: f32,
    pub stamina_dmg: f32,
    pub mp_recover: f32,
    pub poison_resist: f32,
    pub toxic_resist: f32,
    pub bleed_resist: f32,
    pub curse_resist: f32,
    pub frost_resist: f32,
    pub hp_recover: f32,
    pub sub_mp_recover: f32,
    pub sub_hp_recover: f32,
    pub pad1: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CoolTimeParam {
    pub limitation_time_0: f32,
    pub observation_time_0: f32,
    pub limitation_time_1: f32,
    pub observation_time_1: f32,
    pub limitation_time_2: f32,
    pub observation_time_2: f32,
    pub limitation_time_3: f32,
    pub observation_time_3: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CultSettingParam {
    pub distance: f32,
    pub angle: f32,
    pub event_flag_id: i32,
    pub coefficient: i16,
    pub cult_state1: i8,
    pub cult_state2: i8,
    pub pad1: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct DecalParam {
    pub texture_id0: i32,
    pub dmy_poly_id: i32,
    pub pitch_angle: f32,
    pub yaw_angle: f32,
    pub near_distance: f32,
    pub far_distance: f32,
    pub near_size: f32,
    pub far_size: f32,
    pub mask_sp_effect_id: i32,
    #[bitflag(randomVariationNum0, 0)]
    #[bitflag(randomVariationNum1, 1)]
    #[bitflag(randomVariationNum2, 2)]
    #[bitflag(randomVariationNum3, 3)]
    #[bitflag(replaceTextureId_byMaterial, 4)]
    #[bitflag(dmypolyCategory0, 5)]
    #[bitflag(dmypolyCategory1, 6)]
    #[bitflag(decalShapeType0, 7)]
    #[bitflag(decalShapeType1, 8)]
    #[bitflag(decalShapeType2, 9)]
    #[bitflag(decalShapeType3, 10)]
    #[bitflag(useDeferredDecal, 11)]
    #[bitflag(usePaintDecal, 12)]
    #[bitflag(targetAttackChr, 13)]
    #[bitflag(targetDamageChr, 14)]
    #[bitflag(targetOtherChr, 15)]
    #[bitflag(targetMapObj, 16)]
    #[bitflag(usePom, 17)]
    #[bitflag(field0x26, 18)]
    #[bitflag(field0x26_0, 19)]
    #[bitflag(field0x26_1, 20)]
    #[bitflag(field0x26_2, 21)]
    #[bitflag(field0x26_3, 22)]
    #[bitflag(field0x26_4, 23)]
    #[bitflag(field0x27, 24)]
    #[bitflag(field0x27_5, 25)]
    #[bitflag(field0x27_6, 26)]
    #[bitflag(field0x27_7, 27)]
    #[bitflag(field0x27_8, 28)]
    #[bitflag(field0x27_9, 29)]
    #[bitflag(field0x27_10, 30)]
    #[bitflag(field0x27_11, 31)]
    pub bitfield0: u32,
    pub random_size_min: i16,
    pub random_size_max: i16,
    pub random_roll_min: f32,
    pub random_roll_max: f32,
    pub random_pitch_min: f32,
    pub random_pitch_max: f32,
    pub random_yaw_min: f32,
    pub random_yaw_max: f32,
    pub pom_height_scale: f32,
    pub pom_sample_min: u8,
    pub pom_sample_max: u8,
    pub contrast1: u8,
    pub texture_length_type: u8,
    pub texture_width_x: f32,
    pub texture_width_z: f32,
    pub texture_life_time: f32,
    pub field0x58: i32,
    pub field0x5_c: f32,
    pub field0x60: i32,
    pub field0x64: i32,
    pub field0x68: i32,
    pub field0x6_c: i32,
    pub texture_id1: i32,
    pub texture_id2: i32,
    pub texture_id3: i32,
    pub brightness: f32,
    pub texture_id4: i32,
    pub texture_id5: i32,
    pub texture_id6: i32,
    pub r: u8,
    pub g: u8,
    pub b: u8,
    pub unk_na_m: i8,
    pub r_0: u8,
    pub g_1: u8,
    pub b_2: u8,
    pub delayed_spawn_state: i8,
    pub contrast2: f32,
    pub field0x98: f32,
    pub field0x9_c: f32,
    pub field0x_a0: u8,
    pub field0x_a1: u8,
    pub field0x_a2: u8,
    pub field0x_a3: u8,
    pub min_val: f32,
    pub max_val: f32,
    pub field0x_ac: u8,
    pub field0x_ad: u8,
    pub decal_spawn_delay: u16,
    #[bitflag(field0xB0, 0)]
    #[bitflag(field0xB0_0, 1)]
    #[bitflag(field0xB0_1, 2)]
    #[bitflag(field0xB0_2, 3)]
    #[bitflag(field0xB0_3, 4)]
    #[bitflag(IsContactPlayer, 5)]
    #[bitflag(IsFormCube, 6)]
    #[bitflag(field0xB0_4, 7)]
    #[bitflag(field0xB0_5, 8)]
    #[bitflag(field0xB0_6, 9)]
    #[bitflag(field0xB0_7, 10)]
    #[bitflag(field0xB0_8, 11)]
    #[bitflag(field0xB0_9, 12)]
    #[bitflag(field0xB0_10, 13)]
    #[bitflag(field0xB0_11, 14)]
    #[bitflag(field0xB0_12, 15)]
    #[bitflag(field0xB0_13, 16)]
    #[bitflag(field0xB0_14, 17)]
    #[bitflag(field0xB0_15, 18)]
    #[bitflag(field0xB0_16, 19)]
    #[bitflag(field0xB0_17, 20)]
    #[bitflag(field0xB0_18, 21)]
    #[bitflag(field0xB0_19, 22)]
    #[bitflag(field0xB0_20, 23)]
    #[bitflag(field0xB0_21, 24)]
    #[bitflag(field0xB0_22, 25)]
    #[bitflag(field0xB0_23, 26)]
    #[bitflag(field0xB0_24, 27)]
    #[bitflag(field0xB0_25, 28)]
    #[bitflag(field0xB0_26, 29)]
    #[bitflag(field0xB0_27, 30)]
    #[bitflag(field0xB0_28, 31)]
    pub bitfield1: u32,
    pub texture_spawn_delay: f32,
    pub pad1: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct DirectionCameraParam {
    pub rumble_state: u8,
    pub pad1: [u8; 15],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipMtrlSetParam {
    pub material_id01: i32,
    pub material_id02: i32,
    pub material_id03: i32,
    pub material_id04: i32,
    pub material_id05: i32,
    pub item_num01: i8,
    pub item_num02: i8,
    pub item_num03: i8,
    pub item_num04: i8,
    pub item_num05: i8,
    pub pad1: [u8; 6],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamAccessory {
    pub ref_id0: i32,
    pub sfx_variation_id: i32,
    pub weight: f32,
    pub behavior_id: i32,
    pub basic_price: i32,
    pub sell_value: i32,
    pub sort_id: i32,
    pub qwc_id: i32,
    pub equip_model_id: i16,
    pub icon_id: i16,
    pub shop_lv: i16,
    pub trophy_sgrade_id: i16,
    pub trophy_seq_id: i16,
    pub equip_model_category: u8,
    pub equip_model_gender: u8,
    pub accessory_category: u8,
    pub ref_category: u8,
    pub sp_effect_category: u8,
    pub pad1: [u8; 1],
    pub vagrant_item_lot_id: i32,
    pub vagrant_bonus_ene_drop_item_lot_id: i32,
    pub vagrant_item_ene_drop_item_lot_id: i32,
    #[bitflag(IsDeposit, 0)]
    #[bitflag(IsEquipOutBrake, 1)]
    #[bitflag(disableMultiDropShare, 2)]
    #[bitflag(IsDiscard, 3)]
    #[bitflag(IsBool, 4)]
    #[bitflag(field0x3C, 5)]
    #[bitflag(field0x3C_0, 6)]
    #[bitflag(field0x3C_1, 7)]
    pub bitfield0: u8,
    pub pad2: [u8; 3],
    pub costvalue: i32,
    pub ring_compatibility_id: i16,
    pub vow_id: u8,
    pub achievement_id: u8,
    pub ref_id1: i32,
    pub ref_id2: i32,
    pub ref_id3: i32,
    pub ref_id4: i32,
    pub pad3: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamGoods {
    pub ref_id1: i32,
    pub sfx_variation_id: i32,
    pub weight: f32,
    pub fragment_num: i32,
    pub sell_value: i32,
    pub replace_item_id: i32,
    pub behavior_id: i32,
    pub sort_id: i32,
    pub qwc_id: i32,
    pub yes_no_dialog_message_id: i32,
    pub magic_id: i32,
    pub icon_id: i16,
    pub model_id: i16,
    pub shop_lv: i16,
    pub comp_trophy_sed_id: i16,
    pub trophy_seq_id: i16,
    pub max_num: i16,
    pub consume_hero_point: u8,
    pub over_dexterity: u8,
    pub goods_type: u8,
    pub ref_category: u8,
    pub sp_effect_category: u8,
    pub goods_category: u8,
    pub goods_use_anim: i8,
    pub opme_menu_type: u8,
    pub use_limit_category: u8,
    pub replace_category: u8,
    #[bitflag(vowType0, 0)]
    #[bitflag(vowType1, 1)]
    #[bitflag(vowType2, 2)]
    #[bitflag(vowType3, 3)]
    #[bitflag(vowType4, 4)]
    #[bitflag(vowType5, 5)]
    #[bitflag(vowType6, 6)]
    #[bitflag(vowType7, 7)]
    pub bitfield0: u8,
    #[bitflag(vowType8, 0)]
    #[bitflag(vowType9, 1)]
    #[bitflag(vowType10, 2)]
    #[bitflag(vowType11, 3)]
    #[bitflag(vowType12, 4)]
    #[bitflag(vowType13, 5)]
    #[bitflag(vowType14, 6)]
    #[bitflag(vowType15, 7)]
    pub bitfield1: u8,
    #[bitflag(enable_live, 0)]
    #[bitflag(enable_gray, 1)]
    #[bitflag(enable_white, 2)]
    #[bitflag(enable_black, 3)]
    #[bitflag(enable_multi, 4)]
    #[bitflag(disable_offline, 5)]
    #[bitflag(isEquip, 6)]
    #[bitflag(isConsume, 7)]
    pub bitfield2: u8,
    #[bitflag(isAutoEquip, 0)]
    #[bitflag(isEstablishment, 1)]
    #[bitflag(isOnlyOne, 2)]
    #[bitflag(isDrop, 3)]
    #[bitflag(isDeposit, 4)]
    #[bitflag(isDisableHand, 5)]
    #[bitflag(isTravelItem, 6)]
    #[bitflag(isSuppleItem, 7)]
    pub bitfield3: u8,
    #[bitflag(isFullSuppleItem, 0)]
    #[bitflag(isEnhance, 1)]
    #[bitflag(isFixItem, 2)]
    #[bitflag(disableMutliDropShare, 3)]
    #[bitflag(disableUseAtColiseum, 4)]
    #[bitflag(disableUseAtOutofColiseum, 5)]
    #[bitflag(useBulletMaxNum, 6)]
    #[bitflag(useHpCureMaxNum, 7)]
    pub bitfield4: u8,
    #[bitflag(isAutoReplenish, 0)]
    #[bitflag(canMultiUse, 1)]
    #[bitflag(isGuestDrop, 2)]
    #[bitflag(isEnchantLeftHand, 3)]
    #[bitflag(isApplySpecialEffect, 4)]
    #[bitflag(Unk1, 5)]
    #[bitflag(Unk2, 6)]
    #[bitflag(Unk3, 7)]
    pub bitfield5: u8,
    pub ref_id2: i32,
    pub reinforce_param_weapon: i32,
    pub vagrant_item_lot_id: i32,
    pub vagrant_bonus_ene_drop_item_lot_id: i32,
    pub vagrant_itemene_drop_item_lot_id: i32,
    pub ref_virtual_wep_id: i32,
    pub replace_item_id_by_sp_effect: i32,
    pub replace_trigger_sp_effect_id: i32,
    #[bitflag(isLoadOfCinder, 0)]
    #[bitflag(isPlayRegion1, 1)]
    #[bitflag(isLadder, 2)]
    #[bitflag(isMultiPlay, 3)]
    #[bitflag(useSelected, 4)]
    #[bitflag(Unk4, 5)]
    #[bitflag(isPlayRegion2, 6)]
    #[bitflag(isNetPenalized, 7)]
    pub bitfield6: u8,
    pub supple_item_type: u8,
    pub menu_adhoc_type: u8,
    pub drop: u8,
    pub max_rep_num: i16,
    pub invade_type: u8,
    pub pad1: [u8; 1],
    pub shop_id: i32,
    pub fp_consume: i16,
    pub use_limit_category2: i16,
    pub pad2: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamProtector {
    pub sort_id: i32,
    pub wandering_equip_id: i32,
    pub vagrant_item_lot_id: i32,
    pub vagrant_bonusene_drop_item_lot_id: i32,
    pub vagrant_item_ene_drop_item_lot_id: i32,
    pub fix_price: i32,
    pub basic_price: i32,
    pub sell_value: i32,
    pub weight: f32,
    pub resident_sp_effect_id1: i32,
    pub resident_sp_effect_id2: i32,
    pub resident_sp_effect_id3: i32,
    pub material_set_id: i32,
    pub parts_damage_rate: f32,
    pub correct_sarecover: f32,
    pub origin_equip_pro1: i32,
    pub origin_equip_pro2: i32,
    pub origin_equip_pro3: i32,
    pub origin_equip_pro4: i32,
    pub origin_equip_pro5: i32,
    pub origin_equip_pro6: i32,
    pub origin_equip_pro7: i32,
    pub origin_equip_pro8: i32,
    pub origin_equip_pro9: i32,
    pub origin_equip_pro10: i32,
    pub origin_equip_pro11: i32,
    pub origin_equip_pro12: i32,
    pub origin_equip_pro13: i32,
    pub origin_equip_pro14: i32,
    pub origin_equip_pro15: i32,
    pub origin_equip_pro16: i32,
    pub face_scale_m_scale_x: f32,
    pub face_scale_m_scale_z: f32,
    pub face_scale_m_max_x: f32,
    pub face_scale_m_max_z: f32,
    pub face_scale_f_scale_x: f32,
    pub face_scale_f_scale_z: f32,
    pub face_scale_f_max_x: f32,
    pub face_scale_f_max_x_0: f32,
    pub qwc_id: i32,
    pub equip_model_id: i16,
    pub icon_id_m: i16,
    pub icon_id_f: i16,
    pub knockback: i16,
    pub knockback_bounce_rate: i16,
    pub durability: i16,
    pub durability_max: i16,
    pub sa_durability: i16,
    pub def_flick_power: i16,
    pub defense_phys: i16,
    pub defense_magic: i16,
    pub defense_fire: i16,
    pub defense_thunder: i16,
    pub defense_slash: i16,
    pub defense_blow: i16,
    pub defense_thrust: i16,
    pub resist_poison: i16,
    pub resist_toxic: i16,
    pub resist_blood: i16,
    pub resist_curse: i16,
    pub reinforce_type_id: i16,
    pub comp_trophy_sed_id: i16,
    pub shop_lv: i16,
    pub knockback_param_id: u8,
    pub flick_damage_cut_rate: u8,
    pub equip_model_category: u8,
    pub equip_model_gender: u8,
    pub protector_category: u8,
    pub defense_material: u8,
    pub defense_material_sfx: u8,
    pub parts_dmg_type: u8,
    pub defense_material_weak: u8,
    pub defense_material_sfx_weak: u8,
    #[bitflag(isDeposit, 0)]
    #[bitflag(headEquip, 1)]
    #[bitflag(bodyEquip, 2)]
    #[bitflag(armEquip, 3)]
    #[bitflag(legEquip, 4)]
    #[bitflag(useFaceScale, 5)]
    #[bitflag(InvisibleFlag00, 6)]
    #[bitflag(InvisibleFlag01, 7)]
    pub bitfield0: u8,
    #[bitflag(InvisibleFlag02, 0)]
    #[bitflag(InvisibleFlag03, 1)]
    #[bitflag(InvisibleFlag04, 2)]
    #[bitflag(InvisibleFlag05, 3)]
    #[bitflag(InvisibleFlag06, 4)]
    #[bitflag(InvisibleFlag07, 5)]
    #[bitflag(InvisibleFlag08, 6)]
    #[bitflag(InvisibleFlag09, 7)]
    pub bitfield1: u8,
    #[bitflag(InvisibleFlag10, 0)]
    #[bitflag(InvisibleFlag11, 1)]
    #[bitflag(InvisibleFlag12, 2)]
    #[bitflag(InvisibleFlag13, 3)]
    #[bitflag(InvisibleFlag14, 4)]
    #[bitflag(InvisibleFlag15, 5)]
    #[bitflag(InvisibleFlag16, 6)]
    #[bitflag(InvisibleFlag17, 7)]
    pub bitfield2: u8,
    #[bitflag(InvisibleFlag18, 0)]
    #[bitflag(InvisibleFlag19, 1)]
    #[bitflag(InvisibleFlag20, 2)]
    #[bitflag(InvisibleFlag21, 3)]
    #[bitflag(InvisibleFlag22, 4)]
    #[bitflag(InvisibleFlag23, 5)]
    #[bitflag(InvisibleFlag24, 6)]
    #[bitflag(InvisibleFlag25, 7)]
    pub bitfield3: u8,
    #[bitflag(InvisibleFlag26, 0)]
    #[bitflag(InvisibleFlag27, 1)]
    #[bitflag(InvisibleFlag28, 2)]
    #[bitflag(InvisibleFlag29, 3)]
    #[bitflag(InvisibleFlag30, 4)]
    #[bitflag(InvisibleFlag31, 5)]
    #[bitflag(InvisibleFlag32, 6)]
    #[bitflag(InvisibleFlag33, 7)]
    pub bitfield4: u8,
    #[bitflag(InvisibleFlag34, 0)]
    #[bitflag(InvisibleFlag35, 1)]
    #[bitflag(InvisibleFlag36, 2)]
    #[bitflag(InvisibleFlag37, 3)]
    #[bitflag(InvisibleFlag38, 4)]
    #[bitflag(InvisibleFlag39, 5)]
    #[bitflag(InvisibleFlag40, 6)]
    #[bitflag(InvisibleFlag41, 7)]
    pub bitfield5: u8,
    #[bitflag(InvisibleFlag42, 0)]
    #[bitflag(InvisibleFlag43, 1)]
    #[bitflag(InvisibleFlag44, 2)]
    #[bitflag(InvisibleFlag45, 3)]
    #[bitflag(InvisibleFlag46, 4)]
    #[bitflag(InvisibleFlag47, 5)]
    #[bitflag(disableMultiDropShare, 6)]
    #[bitflag(simpleModelForDlc1, 7)]
    pub bitfield6: u8,
    #[bitflag(isGuestDrop0, 0)]
    #[bitflag(isGuestDrop1, 1)]
    #[bitflag(simpleModelForDlc2, 2)]
    #[bitflag(Unk1, 3)]
    #[bitflag(Unk2, 4)]
    #[bitflag(Unk3, 5)]
    #[bitflag(Unk4, 6)]
    #[bitflag(Unk5, 7)]
    pub bitfield7: u8,
    pub phys_damage_cut_rate: f32,
    pub slash_damage_cut_rate: f32,
    pub strike_damage_cut_rate: f32,
    pub thrust_damage_cut_rate: f32,
    pub magic_damage_cut_rate: f32,
    pub fire_damage_cut_rate: f32,
    pub thunder_damage_cut_rate: f32,
    pub material_id0: u16,
    pub material_id1: u16,
    pub material_id2: u16,
    pub material_id3: u16,
    pub material_id4: u16,
    pub material_id5: u16,
    pub material_id6: u16,
    pub material_id7: u16,
    pub protector_category_id: i32,
    pub poise: f32,
    pub pad1: [u8; 4],
    pub dark_damage_cut_rate: f32,
    pub defense_dark: i16,
    pub unk6: u8,
    pub unk7: u8,
    pub unk8: i32,
    pub upper_arm_id: i32,
    pub unk9: i32,
    pub resist_frost: i16,
    pub mask00: u8,
    pub mask01: u8,
    pub mask02: u8,
    pub mask03: u8,
    pub mask04: u8,
    pub mask05: u8,
    pub mask06: u8,
    pub mask07: u8,
    pub mask08: u8,
    pub mask09: u8,
    pub mask10: u8,
    pub mask11: u8,
    pub mask12: u8,
    pub mask13: u8,
    pub mask14: u8,
    pub mask15: u8,
    pub mask16: u8,
    pub mask17: u8,
    pub mask18: u8,
    pub mask19: u8,
    pub mask20: u8,
    pub mask21: u8,
    pub mask22: u8,
    pub mask23: u8,
    pub mask24: u8,
    pub mask25: u8,
    pub mask26: u8,
    pub mask27: u8,
    pub mask28: u8,
    pub mask29: u8,
    pub mask30: u8,
    pub mask31: u8,
    pub mask32: u8,
    pub mask33: u8,
    pub mask34: u8,
    pub mask35: u8,
    pub mask36: u8,
    pub mask37: u8,
    pub mask38: u8,
    pub mask39: u8,
    pub mask40: u8,
    pub mask41: u8,
    pub mask42: u8,
    pub mask43: u8,
    pub mask44: u8,
    pub mask45: u8,
    pub mask46: u8,
    pub mask47: u8,
    pub mask48: u8,
    pub mask49: u8,
    pub mask50: u8,
    pub mask51: u8,
    pub mask52: u8,
    pub mask53: u8,
    pub mask54: u8,
    pub mask55: u8,
    pub mask56: u8,
    pub mask57: u8,
    pub mask58: u8,
    pub mask59: u8,
    pub mask60: u8,
    pub mask61: u8,
    pub mask62: u8,
    pub mask63: u8,
    pub mask64: u8,
    pub mask65: u8,
    pub mask66: u8,
    pub mask67: u8,
    pub mask68: u8,
    pub mask69: u8,
    pub mask70: u8,
    pub mask71: u8,
    pub mask72: u8,
    pub mask73: u8,
    pub mask74: u8,
    pub mask75: u8,
    pub mask76: u8,
    pub mask77: u8,
    pub mask78: u8,
    pub mask79: u8,
    pub mask80: u8,
    pub mask81: u8,
    pub mask82: u8,
    pub mask83: u8,
    pub mask84: u8,
    pub mask85: u8,
    pub mask86: u8,
    pub mask87: u8,
    pub mask88: u8,
    pub mask89: u8,
    pub mask90: u8,
    pub mask91: u8,
    pub mask92: u8,
    pub mask93: u8,
    pub mask94: u8,
    pub mask95: u8,
    pub mask96: u8,
    pub mask97: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamWeapon {
    pub behavior_variation_id: i32,
    pub sort_id: i32,
    pub wandering_equip_id: i32,
    pub weight: f32,
    pub weapon_weight_rate: f32,
    pub fix_price: i32,
    pub basic_price: i32,
    pub sell_value: i32,
    pub correct_strength: f32,
    pub correct_agility: f32,
    pub corret_magic: f32,
    pub corret_faith: f32,
    pub phys_guard_cut_rate: f32,
    pub mag_guard_cut_rate: f32,
    pub fire_guard_cut_rate: f32,
    pub thun_guard_cut_rate: f32,
    pub sp_effect_behavior_id0: i32,
    pub sp_effect_behavior_id1: i32,
    pub sp_effect_behavior_id2: i32,
    pub resident_sp_effect_id0: i32,
    pub resident_sp_effect_id1: i32,
    pub resident_sp_effect_id2: i32,
    pub material_set_id: i32,
    pub origin_equip_wep0: i32,
    pub origin_equip_wep1: i32,
    pub origin_equip_wep2: i32,
    pub origin_equip_wep3: i32,
    pub origin_equip_wep4: i32,
    pub origin_equip_wep5: i32,
    pub origin_equip_wep6: i32,
    pub origin_equip_wep7: i32,
    pub origin_equip_wep8: i32,
    pub origin_equip_wep9: i32,
    pub origin_equip_wep10: i32,
    pub origin_equip_wep11: i32,
    pub origin_equip_wep12: i32,
    pub origin_equip_wep13: i32,
    pub origin_equip_wep14: i32,
    pub origin_equip_wep15: i32,
    pub anti_demon_damage_rate: f32,
    pub ant_undead_damage_rate: f32,
    pub ant_hollow_damage_rate: f32,
    pub ant_abyssal_damage_rate: f32,
    pub vagrant_item_lot_id: i32,
    pub vagrant_bonus_ene_drop_item_lot_id: i32,
    pub vagrant_item_ene_drop_item_lot_id: i32,
    pub equip_model_id: i16,
    pub icon_id: i16,
    pub durability: i16,
    pub duraility_max: i16,
    pub attack_throw_escape: i16,
    pub parry_damage_life: i16,
    pub atk_base_physics: i16,
    pub atk_base_magic: i16,
    pub atk_base_fire: i16,
    pub atk_base_thunder: i16,
    pub atk_base_stamina: i16,
    pub sa_weapon_damage: i16,
    pub sa_durability: i16,
    pub guard_angle: i16,
    pub stamina_guard_def: i16,
    pub reinforce_type_id: i16,
    pub trophy_sgrade_id: i16,
    pub trophy_seq_id: i16,
    pub throw_atk_rate: i16,
    pub bow_dist_rate: i16,
    pub equip_model_category: u8,
    pub equip_model_gender: u8,
    pub weapon_category: u8,
    pub wepmotion_category: u8,
    pub guardmotion_category: u8,
    pub atk_material: u8,
    pub def_material: u8,
    pub def_sfx_material: u8,
    pub correct_type: u8,
    pub sp_attribute: u8,
    pub sp_atk_category: i16,
    pub wepmotion_one_hand_id: u8,
    pub wepmotion_both_hand_id: u8,
    pub proper_strength: u8,
    pub proper_agility: u8,
    pub proper_magic: u8,
    pub proper_faith: u8,
    pub over_strength: u8,
    pub attack_base_parry: u8,
    pub defense_base_parry: u8,
    pub guard_base_repel: u8,
    pub attack_base_repel: u8,
    pub guard_cut_cancel_rate: u8,
    pub guard_level: u8,
    pub slash_guard_cut_rate: u8,
    pub blow_guard_cut_rate: u8,
    pub thrust_guard_cut_rate: u8,
    pub poison_guard_resist: u8,
    pub toxic_guard_resist: u8,
    pub blood_guard_resist: u8,
    pub curse_guard_resist: u8,
    pub is_durability_divergence: u8,
    #[bitflag(rightHandEquipable, 0)]
    #[bitflag(leftHandEquipable, 1)]
    #[bitflag(bothHandEquipable, 2)]
    #[bitflag(arrowSlotEquipable, 3)]
    #[bitflag(boltSlotEquipable, 4)]
    #[bitflag(enableGuard, 5)]
    #[bitflag(enableParry, 6)]
    #[bitflag(enableMagic, 7)]
    pub bitfield0: u8,
    #[bitflag(enablePyromancy, 0)]
    #[bitflag(enableMiracle, 1)]
    #[bitflag(enableVowMagic, 2)]
    #[bitflag(isNormalAttackType, 3)]
    #[bitflag(isBlowAttackType, 4)]
    #[bitflag(isSlashAttackType, 5)]
    #[bitflag(isThrustAttackType, 6)]
    #[bitflag(isEnhance, 7)]
    pub bitfield1: u8,
    #[bitflag(isLuckCorrect, 0)]
    #[bitflag(isCustom, 1)]
    #[bitflag(disableBaseChangeReset, 2)]
    #[bitflag(disableRepair, 3)]
    #[bitflag(isDarkHand, 4)]
    #[bitflag(simpleModelForDlc, 5)]
    #[bitflag(ubyteLanternWep, 6)]
    #[bitflag(isVersusGhostWep, 7)]
    pub bitfield2: u8,
    #[bitflag(baseChangeCategory, 0)]
    #[bitflag(isDragonSlayer, 1)]
    #[bitflag(isDeposit, 2)]
    #[bitflag(disableMultiDropShare, 3)]
    #[bitflag(IsDiscard, 4)]
    #[bitflag(IsDrop, 5)]
    #[bitflag(Bool3, 6)]
    #[bitflag(Bool4, 7)]
    pub bitfield3: u8,
    pub unk6: u8,
    pub unk7: u8,
    pub unk8: u8,
    pub unk9: u8,
    pub unk10: u8,
    pub unk11: u8,
    pub group0_atk_vfx_id: i32,
    pub group0_dummy_poly_id0: i32,
    pub group0_dummy_poly_id1: i32,
    pub group1_atk_vfx_id: i32,
    pub group1_dummy_poly_id0: i32,
    pub group1_dummy_poly_id1: i32,
    pub group2_atk_vfx_id: i32,
    pub group2_dummy_poly_id0: i32,
    pub group2_dummy_poly_id1: i32,
    pub group3_atk_vfx_id: i32,
    pub group3_dummy_poly_id0: i32,
    pub group3_dummy_poly_id1: i32,
    pub group4_atk_vfx_id: i32,
    pub group4_dummy_poly_id0: i32,
    pub group4_dummy_poly_id1: i32,
    pub group5_atk_vfx_id: i32,
    pub group5_dummy_poly_id0: i32,
    pub group5_dummy_poly_id1: i32,
    pub group6_atk_vfx_id: i32,
    pub group6_dummy_poly_id0: i32,
    pub group6_dummy_poly_id1: i32,
    pub group7_atk_vfx_id: i32,
    pub group7_dummy_poly_id0: i32,
    pub group7_dummy_poly_id1: i32,
    pub material_val0: i16,
    pub material_val1: i16,
    pub wep_absorp_pos_id: i32,
    pub unk12: f32,
    #[bitflag(Bool5, 0)]
    #[bitflag(Bool6, 1)]
    #[bitflag(Bool7, 2)]
    #[bitflag(Unk13, 3)]
    #[bitflag(Unk14, 4)]
    #[bitflag(IsAutoEquip, 5)]
    #[bitflag(Unk16, 6)]
    #[bitflag(Unk17, 7)]
    pub bitfield4: u8,
    pub unk21: u8,
    pub unk22: u8,
    pub unk23: u8,
    pub unk24: f32,
    pub unk25: f32,
    pub dark_guard_cut_rate: f32,
    pub atk_base_dark: i16,
    pub unk26: u8,
    pub atk_throw_escape_a: u8,
    pub sword_art_act_id: i32,
    pub atk_throw_escape_b: u8,
    pub unk30: u8,
    pub unk31: u8,
    pub menu_adhoc: u8,
    pub sword_art_id: i32,
    pub correct_luck: f32,
    pub reinforce_weapon_id: i32,
    pub unk34: i16,
    pub display_type_id: i16,
    pub calc_correct_val0: f32,
    pub calc_correct_val1: f32,
    pub calc_correct_val2: f32,
    pub calc_correct_val3: f32,
    pub calc_correct_val4: f32,
    pub calc_correct_val5: f32,
    pub calc_correct_val6: f32,
    pub calc_correct_val7: f32,
    pub calc_correct_val8: f32,
    pub calc_correct_val9: f32,
    pub calc_correct_val10: f32,
    pub weapon_vfx0: i32,
    pub weapon_vfx1: i32,
    pub weapon_vfx2: i32,
    pub weapon_vfx3: i32,
    pub weapon_vfx4: i32,
    pub weapon_vfx5: i32,
    pub weapon_vfx6: i32,
    pub weapon_vfx7: i32,
    pub stamina_consume_rate: f32,
    pub unk48: f32,
    pub unk49: f32,
    pub unk50: f32,
    pub unk51: f32,
    pub unk52: f32,
    pub unk53: f32,
    pub unk54: f32,
    pub unk55: f32,
    pub unk56: i32,
    pub unk57: i32,
    pub unk58: i32,
    pub unk59: i32,
    pub unk60: i32,
    pub attack_element_correct_id: i32,
    pub shop_price: i32,
    pub unk62: u8,
    pub max_num: u8,
    #[bitflag(Unk18, 0)]
    #[bitflag(Unk19, 1)]
    #[bitflag(Unk20, 2)]
    #[bitflag(WepSpMask0, 3)]
    #[bitflag(WepSpMask1, 4)]
    #[bitflag(WepSpMask2, 5)]
    #[bitflag(WepSpMask3, 6)]
    #[bitflag(WepSpMask4, 7)]
    pub bitfield5: u8,
    pub unk65: u8,
    pub unk66: i32,
    pub sp_eff9600: i16,
    pub pad1: [u8; 38],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FaceGenParam {
    pub face_geo_data01: u8,
    pub face_geo_data02: u8,
    pub face_geo_data03: u8,
    pub face_geo_data04: u8,
    pub face_geo_data05: u8,
    pub face_geo_data06: u8,
    pub face_geo_data07: u8,
    pub face_geo_data08: u8,
    pub face_geo_data09: u8,
    pub face_geo_data10: u8,
    pub face_geo_data11: u8,
    pub face_geo_data12: u8,
    pub face_geo_data13: u8,
    pub face_geo_data14: u8,
    pub face_geo_data15: u8,
    pub face_geo_data16: u8,
    pub face_geo_data17: u8,
    pub face_geo_data18: u8,
    pub face_geo_data19: u8,
    pub face_geo_data20: u8,
    pub face_geo_data21: u8,
    pub face_geo_data22: u8,
    pub face_geo_data23: u8,
    pub face_geo_data24: u8,
    pub face_geo_data25: u8,
    pub face_geo_data26: u8,
    pub face_geo_data27: u8,
    pub face_geo_data28: u8,
    pub face_geo_data29: u8,
    pub face_geo_data30: u8,
    pub face_geo_data31: u8,
    pub face_geo_data32: u8,
    pub face_geo_data33: u8,
    pub face_geo_data34: u8,
    pub face_geo_data35: u8,
    pub face_geo_data36: u8,
    pub face_geo_data37: u8,
    pub face_geo_data38: u8,
    pub face_geo_data39: u8,
    pub face_geo_data40: u8,
    pub face_geo_data41: u8,
    pub face_geo_data42: u8,
    pub face_geo_data43: u8,
    pub face_geo_data44: u8,
    pub face_geo_data45: u8,
    pub face_geo_data46: u8,
    pub face_geo_data47: u8,
    pub face_geo_data48: u8,
    pub face_geo_data49: u8,
    pub face_tex_data00: u8,
    pub face_tex_data01: u8,
    pub face_tex_data02: u8,
    pub face_tex_data03: u8,
    pub face_tex_data04: u8,
    pub face_tex_data05: u8,
    pub face_tex_data06: u8,
    pub face_tex_data07: u8,
    pub face_tex_data08: u8,
    pub face_tex_data09: u8,
    pub face_tex_data10: u8,
    pub face_tex_data11: u8,
    pub face_tex_data12: u8,
    pub face_tex_data13: u8,
    pub face_tex_data14: u8,
    pub face_tex_data15: u8,
    pub face_tex_data16: u8,
    pub face_tex_data17: u8,
    pub face_tex_data18: u8,
    pub face_tex_data19: u8,
    pub face_tex_data20: u8,
    pub face_tex_data21: u8,
    pub face_tex_data22: u8,
    pub face_tex_data23: u8,
    pub face_tex_data24: u8,
    pub face_tex_data25: u8,
    pub face_tex_data26: u8,
    pub face_tex_data27: u8,
    pub face_tex_data28: u8,
    pub face_tex_data29: u8,
    pub face_tex_data30: u8,
    pub face_tex_data31: u8,
    pub face_tex_data32: u8,
    pub face_tex_data33: u8,
    pub face_tex_data34: u8,
    pub face_tex_data35: u8,
    pub face_tex_data36: u8,
    pub face_tex_data37: u8,
    pub face_tex_data38: u8,
    pub face_tex_data39: u8,
    pub face_tex_data40: u8,
    pub face_tex_data41: u8,
    pub face_tex_data42: u8,
    pub face_tex_data43: u8,
    pub face_tex_data44: u8,
    pub face_tex_data45: u8,
    pub face_tex_data46: u8,
    pub face_tex_data47: u8,
    pub face_tex_data48: u8,
    pub face_tex_data49: u8,
    pub face_parts_id: u8,
    pub skin_color_r: u8,
    pub skin_color_g: u8,
    pub skin_color_b: u8,
    pub hair_parts_id: u8,
    pub hair_color_r: u8,
    pub hair_color_g: u8,
    pub hair_color_b: u8,
    pub hair_color_g_0: u8,
    pub eye_lparts_id: u8,
    pub eye_lcolor_r: u8,
    pub eye_lcolor_g: u8,
    pub eye_lcolor_b: u8,
    pub eye_rparts_id: u8,
    pub eye_rcolor_r: u8,
    pub eye_rcolor_g: u8,
    pub eye_rcolor_b: u8,
    pub eye_brow_parts_id: u8,
    pub eye_brow_color_r: u8,
    pub eye_brow_color_g: u8,
    pub eye_brow_color_b: u8,
    pub beard_parts_id: u8,
    pub beard_color_r: u8,
    pub beard_color_g: u8,
    pub beard_color_b: u8,
    pub accessories_parts_id: u8,
    pub accessories_color_r: u8,
    pub accessories_color_g: u8,
    pub accessories_color_b: u8,
    pub decal_parts_id: u8,
    pub decal_color_r: u8,
    pub decal_color_g: u8,
    pub decal_color_b: u8,
    pub decal_pos_x: u8,
    pub decal_pos_y: u8,
    pub decal_angle: u8,
    pub decal_scale: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FaceParam {
    pub face_parts_id: u8,
    pub skin_color_r: u8,
    pub skin_color_g: u8,
    pub skin_color_b: u8,
    pub hair_parts_id: u8,
    pub hair_color_r: u8,
    pub hair_color_g: u8,
    pub hair_color_b: u8,
    pub eye_lparts_id: u8,
    pub eye_lcolor_r: u8,
    pub eye_lcolor_g: u8,
    pub eye_lcolor_b: u8,
    pub eye_rparts_id: u8,
    pub eye_rcolor_r: u8,
    pub eye_rcolor_g: u8,
    pub eye_rcolor_b: u8,
    pub eye_brow_parts_id: u8,
    pub eye_brow_color_r: u8,
    pub eye_brow_color_g: u8,
    pub eye_brow_color_b: u8,
    pub beard_parts_id: u8,
    pub beard_color_r: u8,
    pub beard_color_g: u8,
    pub beard_color_b: u8,
    pub accessories_parts_id: u8,
    pub accessories_color_r: u8,
    pub accessories_color_g: u8,
    pub accessories_color_b: u8,
    pub decal_parts_id: u8,
    pub decal_color_r: u8,
    pub decal_color_g: u8,
    pub decal_color_b: u8,
    pub decal_pos_x: u8,
    pub decal_pos_y: u8,
    pub decal_angle: u8,
    pub decal_scale: u8,
    pub chr_body_scale_head: u8,
    pub chr_body_scale_breast: u8,
    pub chr_body_scale_abdomen: u8,
    pub chr_body_scale_arm: u8,
    pub chr_body_scale_leg: u8,
    pub age: u8,
    pub gender: u8,
    pub carricature_geometry: u8,
    pub carricature_texture: u8,
    pub face_geo_data00: u8,
    pub face_geo_data01: u8,
    pub face_geo_data02: u8,
    pub face_geo_data03: u8,
    pub face_geo_data04: u8,
    pub face_geo_data05: u8,
    pub face_geo_data06: u8,
    pub face_geo_data07: u8,
    pub face_geo_data08: u8,
    pub face_geo_data09: u8,
    pub face_geo_data10: u8,
    pub face_geo_data11: u8,
    pub face_geo_data12: u8,
    pub face_geo_data13: u8,
    pub face_geo_data14: u8,
    pub face_geo_data15: u8,
    pub face_geo_data16: u8,
    pub face_geo_data17: u8,
    pub face_geo_data18: u8,
    pub face_geo_data19: u8,
    pub face_geo_data20: u8,
    pub face_geo_data21: u8,
    pub face_geo_data22: u8,
    pub face_geo_data23: u8,
    pub face_geo_data24: u8,
    pub face_geo_data25: u8,
    pub face_geo_data26: u8,
    pub face_geo_data27: u8,
    pub face_geo_data28: u8,
    pub face_geo_data29: u8,
    pub face_geo_data30: u8,
    pub face_geo_data31: u8,
    pub face_geo_data32: u8,
    pub face_geo_data33: u8,
    pub face_geo_data34: u8,
    pub face_geo_data35: u8,
    pub face_geo_data36: u8,
    pub face_geo_data37: u8,
    pub face_geo_data38: u8,
    pub face_geo_data39: u8,
    pub face_geo_data40: u8,
    pub face_geo_data41: u8,
    pub face_geo_data42: u8,
    pub face_geo_data43: u8,
    pub face_geo_data44: u8,
    pub face_geo_data45: u8,
    pub face_geo_data46: u8,
    pub face_geo_data47: u8,
    pub face_geo_data48: u8,
    pub face_geo_data49: u8,
    pub face_geo_data50: u8,
    pub face_geo_data51: u8,
    pub face_geo_data52: u8,
    pub face_geo_data53: u8,
    pub face_geo_data54: u8,
    pub face_geo_data55: u8,
    pub face_geo_data56: u8,
    pub face_geo_data57: u8,
    pub face_geo_data58: u8,
    pub face_geo_data59: u8,
    pub face_geo_data60: u8,
    pub face_tex_data00: u8,
    pub face_tex_data01: u8,
    pub face_tex_data02: u8,
    pub face_tex_data03: u8,
    pub face_tex_data04: u8,
    pub face_tex_data05: u8,
    pub face_tex_data06: u8,
    pub face_tex_data07: u8,
    pub face_tex_data08: u8,
    pub face_tex_data09: u8,
    pub face_tex_data10: u8,
    pub face_tex_data11: u8,
    pub face_tex_data12: u8,
    pub face_tex_data13: u8,
    pub face_tex_data14: u8,
    pub face_tex_data15: u8,
    pub face_tex_data16: u8,
    pub face_tex_data17: u8,
    pub face_tex_data18: u8,
    pub face_tex_data19: u8,
    pub face_tex_data20: u8,
    pub face_tex_data21: u8,
    pub face_tex_data22: u8,
    pub face_tex_data23: u8,
    pub face_tex_data24: u8,
    pub face_tex_data25: u8,
    pub face_tex_data26: u8,
    pub face_tex_data27: u8,
    pub face_tex_data28: u8,
    pub face_tex_data29: u8,
    pub face_tex_data30: u8,
    pub face_tex_data31: u8,
    pub face_tex_data32: u8,
    pub face_tex_data33: u8,
    pub face_tex_data34: u8,
    pub face_tex_data35: u8,
    pub face_geo_asym_data00: u8,
    pub face_geo_asym_data01: u8,
    pub face_geo_asym_data02: u8,
    pub face_geo_asym_data03: u8,
    pub face_geo_asym_data04: u8,
    pub face_geo_asym_data05: u8,
    pub face_geo_asym_data06: u8,
    pub face_geo_asym_data07: u8,
    pub face_geo_asym_data08: u8,
    pub face_geo_asym_data09: u8,
    pub face_geo_asym_data10: u8,
    pub face_geo_asym_data11: u8,
    pub face_geo_asym_data12: u8,
    pub face_geo_asym_data13: u8,
    pub face_geo_asym_data14: u8,
    pub face_geo_asym_data15: u8,
    pub face_geo_asym_data16: u8,
    pub face_geo_asym_data17: u8,
    pub face_geo_asym_data18: u8,
    pub face_geo_asym_data19: u8,
    pub face_geo_asym_data20: u8,
    pub face_geo_asym_data21: u8,
    pub face_geo_asym_data22: u8,
    pub face_geo_asym_data23: u8,
    pub face_geo_asym_data24: u8,
    pub face_geo_asym_data25: u8,
    pub face_geo_asym_data26: u8,
    pub face_geo_asym_data27: u8,
    pub face_geo_asym_data28: u8,
    pub face_geo_asym_data29: u8,
    pub face_geo_asym_data30: u8,
    pub face_geo_asym_data31: u8,
    pub padding: [u8; 18],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FaceRangeParam {
    pub unknown: [u8; 196],
    pub face_geo_data00: f32,
    pub face_geo_data01: f32,
    pub face_geo_data02: f32,
    pub face_geo_data03: f32,
    pub face_geo_data04: f32,
    pub face_geo_data05: f32,
    pub face_geo_data06: f32,
    pub face_geo_data07: f32,
    pub face_geo_data08: f32,
    pub face_geo_data09: f32,
    pub face_geo_data10: f32,
    pub face_geo_data11: f32,
    pub face_geo_data12: f32,
    pub face_geo_data13: f32,
    pub face_geo_data14: f32,
    pub face_geo_data15: f32,
    pub face_geo_data16: f32,
    pub face_geo_data17: f32,
    pub face_geo_data18: f32,
    pub face_geo_data19: f32,
    pub face_geo_data20: f32,
    pub face_geo_data21: f32,
    pub face_geo_data22: f32,
    pub face_geo_data23: f32,
    pub face_geo_data24: f32,
    pub face_geo_data25: f32,
    pub face_geo_data26: f32,
    pub face_geo_data27: f32,
    pub face_geo_data28: f32,
    pub face_geo_data29: f32,
    pub face_geo_data30: f32,
    pub face_geo_data31: f32,
    pub face_geo_data32: f32,
    pub face_geo_data33: f32,
    pub face_geo_data34: f32,
    pub face_geo_data35: f32,
    pub face_geo_data36: f32,
    pub face_geo_data37: f32,
    pub face_geo_data38: f32,
    pub face_geo_data39: f32,
    pub face_geo_data40: f32,
    pub face_geo_data41: f32,
    pub face_geo_data42: f32,
    pub face_geo_data43: f32,
    pub face_geo_data44: f32,
    pub face_geo_data45: f32,
    pub face_geo_data46: f32,
    pub face_geo_data47: f32,
    pub face_geo_data48: f32,
    pub face_geo_data49: f32,
    pub face_geo_data50: f32,
    pub face_geo_data51: f32,
    pub face_geo_data52: f32,
    pub face_geo_data53: f32,
    pub face_geo_data54: f32,
    pub face_geo_data55: f32,
    pub face_geo_data56: f32,
    pub face_geo_data57: f32,
    pub face_geo_data58: f32,
    pub face_geo_data59: f32,
    pub face_geo_data60: f32,
    pub face_tex_data00: f32,
    pub face_tex_data01: f32,
    pub face_tex_data02: f32,
    pub face_tex_data03: f32,
    pub face_tex_data04: f32,
    pub face_tex_data05: f32,
    pub face_tex_data06: f32,
    pub face_tex_data07: f32,
    pub face_tex_data08: f32,
    pub face_tex_data09: f32,
    pub face_tex_data10: f32,
    pub face_tex_data11: f32,
    pub face_tex_data12: f32,
    pub face_tex_data13: f32,
    pub face_tex_data14: f32,
    pub face_tex_data15: f32,
    pub face_tex_data16: f32,
    pub face_tex_data17: f32,
    pub face_tex_data18: f32,
    pub face_tex_data19: f32,
    pub face_tex_data20: f32,
    pub face_tex_data21: f32,
    pub face_tex_data22: f32,
    pub face_tex_data23: f32,
    pub face_tex_data24: f32,
    pub face_tex_data25: f32,
    pub face_tex_data26: f32,
    pub face_tex_data27: f32,
    pub face_tex_data28: f32,
    pub face_tex_data29: f32,
    pub face_tex_data30: f32,
    pub face_tex_data31: f32,
    pub face_tex_data32: f32,
    pub face_tex_data33: f32,
    pub face_tex_data34: f32,
    pub face_tex_data35: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FootSfxParam {
    pub foot_sfx_id000: i32,
    pub foot_sfx_id001: i32,
    pub foot_sfx_id002: i32,
    pub foot_sfx_id003: i32,
    pub foot_sfx_id004: i32,
    pub foot_sfx_id005: i32,
    pub foot_sfx_id006: i32,
    pub foot_sfx_id007: i32,
    pub foot_sfx_id008: i32,
    pub foot_sfx_id009: i32,
    pub foot_sfx_id010: i32,
    pub foot_sfx_id011: i32,
    pub foot_sfx_id012: i32,
    pub foot_sfx_id013: i32,
    pub foot_sfx_id014: i32,
    pub foot_sfx_id015: i32,
    pub foot_sfx_id016: i32,
    pub foot_sfx_id017: i32,
    pub foot_sfx_id018: i32,
    pub foot_sfx_id019: i32,
    pub foot_sfx_id020: i32,
    pub foot_sfx_id021: i32,
    pub foot_sfx_id022: i32,
    pub foot_sfx_id023: i32,
    pub foot_sfx_id024: i32,
    pub foot_sfx_id025: i32,
    pub foot_sfx_id026: i32,
    pub foot_sfx_id027: i32,
    pub foot_sfx_id028: i32,
    pub foot_sfx_id029: i32,
    pub foot_sfx_id030: i32,
    pub foot_sfx_id031: i32,
    pub foot_sfx_id032: i32,
    pub foot_sfx_id033: i32,
    pub foot_sfx_id034: i32,
    pub foot_sfx_id035: i32,
    pub foot_sfx_id036: i32,
    pub foot_sfx_id037: i32,
    pub foot_sfx_id038: i32,
    pub foot_sfx_id039: i32,
    pub foot_sfx_id040: i32,
    pub foot_sfx_id041: i32,
    pub foot_sfx_id042: i32,
    pub foot_sfx_id043: i32,
    pub foot_sfx_id044: i32,
    pub foot_sfx_id045: i32,
    pub foot_sfx_id046: i32,
    pub foot_sfx_id047: i32,
    pub foot_sfx_id048: i32,
    pub foot_sfx_id049: i32,
    pub foot_sfx_id050: i32,
    pub foot_sfx_id051: i32,
    pub foot_sfx_id052: i32,
    pub foot_sfx_id053: i32,
    pub foot_sfx_id054: i32,
    pub foot_sfx_id055: i32,
    pub foot_sfx_id056: i32,
    pub foot_sfx_id057: i32,
    pub foot_sfx_id058: i32,
    pub foot_sfx_id059: i32,
    pub foot_sfx_id060: i32,
    pub foot_sfx_id061: i32,
    pub foot_sfx_id062: i32,
    pub foot_sfx_id063: i32,
    pub foot_sfx_id064: i32,
    pub foot_sfx_id065: i32,
    pub foot_sfx_id066: i32,
    pub foot_sfx_id067: i32,
    pub foot_sfx_id068: i32,
    pub foot_sfx_id069: i32,
    pub foot_sfx_id070: i32,
    pub foot_sfx_id071: i32,
    pub foot_sfx_id072: i32,
    pub foot_sfx_id073: i32,
    pub foot_sfx_id074: i32,
    pub foot_sfx_id075: i32,
    pub foot_sfx_id076: i32,
    pub foot_sfx_id077: i32,
    pub foot_sfx_id078: i32,
    pub foot_sfx_id079: i32,
    pub foot_sfx_id080: i32,
    pub foot_sfx_id081: i32,
    pub foot_sfx_id082: i32,
    pub foot_sfx_id083: i32,
    pub foot_sfx_id084: i32,
    pub foot_sfx_id085: i32,
    pub foot_sfx_id086: i32,
    pub foot_sfx_id087: i32,
    pub foot_sfx_id088: i32,
    pub foot_sfx_id089: i32,
    pub foot_sfx_id090: i32,
    pub foot_sfx_id091: i32,
    pub foot_sfx_id092: i32,
    pub foot_sfx_id093: i32,
    pub foot_sfx_id094: i32,
    pub foot_sfx_id095: i32,
    pub foot_sfx_id096: i32,
    pub foot_sfx_id097: i32,
    pub foot_sfx_id098: i32,
    pub foot_sfx_id099: i32,
    pub foot_sfx_id100: i32,
    pub foot_sfx_id101: i32,
    pub foot_sfx_id102: i32,
    pub foot_sfx_id103: i32,
    pub foot_sfx_id104: i32,
    pub foot_sfx_id105: i32,
    pub foot_sfx_id106: i32,
    pub foot_sfx_id107: i32,
    pub foot_sfx_id108: i32,
    pub foot_sfx_id109: i32,
    pub foot_sfx_id110: i32,
    pub foot_sfx_id111: i32,
    pub foot_sfx_id112: i32,
    pub foot_sfx_id113: i32,
    pub foot_sfx_id114: i32,
    pub foot_sfx_id115: i32,
    pub foot_sfx_id116: i32,
    pub foot_sfx_id117: i32,
    pub foot_sfx_id118: i32,
    pub foot_sfx_id119: i32,
    pub foot_sfx_id120: i32,
    pub foot_sfx_id121: i32,
    pub foot_sfx_id122: i32,
    pub foot_sfx_id123: i32,
    pub foot_sfx_id124: i32,
    pub foot_sfx_id125: i32,
    pub foot_sfx_id126: i32,
    pub foot_sfx_id127: i32,
    pub foot_sfx_id128: i32,
    pub foot_sfx_id129: i32,
    pub foot_sfx_id130: i32,
    pub foot_sfx_id131: i32,
    pub foot_sfx_id132: i32,
    pub foot_sfx_id133: i32,
    pub foot_sfx_id134: i32,
    pub foot_sfx_id135: i32,
    pub foot_sfx_id136: i32,
    pub foot_sfx_id137: i32,
    pub foot_sfx_id138: i32,
    pub foot_sfx_id139: i32,
    pub foot_sfx_id140: i32,
    pub foot_sfx_id141: i32,
    pub foot_sfx_id142: i32,
    pub foot_sfx_id143: i32,
    pub foot_sfx_id144: i32,
    pub foot_sfx_id145: i32,
    pub foot_sfx_id146: i32,
    pub foot_sfx_id147: i32,
    pub foot_sfx_id148: i32,
    pub foot_sfx_id149: i32,
    pub foot_sfx_id150: i32,
    pub foot_sfx_id151: i32,
    pub foot_sfx_id152: i32,
    pub foot_sfx_id153: i32,
    pub foot_sfx_id154: i32,
    pub foot_sfx_id155: i32,
    pub foot_sfx_id156: i32,
    pub foot_sfx_id157: i32,
    pub foot_sfx_id158: i32,
    pub foot_sfx_id159: i32,
    pub foot_sfx_id160: i32,
    pub foot_sfx_id161: i32,
    pub foot_sfx_id162: i32,
    pub foot_sfx_id163: i32,
    pub foot_sfx_id164: i32,
    pub foot_sfx_id165: i32,
    pub foot_sfx_id166: i32,
    pub foot_sfx_id167: i32,
    pub foot_sfx_id168: i32,
    pub foot_sfx_id169: i32,
    pub foot_sfx_id170: i32,
    pub foot_sfx_id171: i32,
    pub foot_sfx_id172: i32,
    pub foot_sfx_id173: i32,
    pub foot_sfx_id174: i32,
    pub foot_sfx_id175: i32,
    pub foot_sfx_id176: i32,
    pub foot_sfx_id177: i32,
    pub foot_sfx_id178: i32,
    pub foot_sfx_id179: i32,
    pub foot_sfx_id180: i32,
    pub foot_sfx_id181: i32,
    pub foot_sfx_id182: i32,
    pub foot_sfx_id183: i32,
    pub foot_sfx_id184: i32,
    pub foot_sfx_id185: i32,
    pub foot_sfx_id186: i32,
    pub foot_sfx_id187: i32,
    pub foot_sfx_id188: i32,
    pub foot_sfx_id189: i32,
    pub foot_sfx_id190: i32,
    pub foot_sfx_id191: i32,
    pub foot_sfx_id192: i32,
    pub foot_sfx_id193: i32,
    pub foot_sfx_id194: i32,
    pub foot_sfx_id195: i32,
    pub foot_sfx_id196: i32,
    pub foot_sfx_id197: i32,
    pub foot_sfx_id198: i32,
    pub foot_sfx_id199: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GameAreaParam {
    pub bonus_soul_single: i32,
    pub bonus_soul_multi: i32,
    pub humanity_point_count_flag_id_top: i32,
    pub humanity_drop_point1: i16,
    pub humanity_drop_point2: i16,
    pub humanity_drop_point3: i16,
    pub humanity_drop_point4: i16,
    pub humanity_drop_point5: i16,
    pub humanity_drop_point6: i16,
    pub humanity_drop_point7: i16,
    pub humanity_drop_point8: i16,
    pub humanity_drop_point9: i16,
    pub humanity_drop_point10: i16,
    pub sub_bonus_soul_single: i32,
    pub subbonus_soul_multi: i32,
    pub pad1: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GameProgressParam {
    pub event_flag_id: i32,
    pub progress_id: u8,
    pub pad1: [u8; 11],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GemCategoryParam {
    pub sort_no: i32,
    pub manifest_rate: f32,
    pub directional_id: i32,
    pub cate_group_id: i32,
    pub exclude_group_id: i32,
    #[bitflag(isNegative, 0)]
    #[bitflag(enableSlotTypeA, 1)]
    #[bitflag(enableSlotTypeB, 2)]
    #[bitflag(enableSlotTypeC, 3)]
    #[bitflag(enableSlotTypeD, 4)]
    #[bitflag(enableSlotTypeE, 5)]
    #[bitflag(enableSlotTypeF, 6)]
    #[bitflag(holygrailTypeGroup, 7)]
    pub bitfield0: u8,
    pub pad1: [u8; 3],
    pub affinity_cate_id_0: i32,
    pub affinity_modify_rate_0: f32,
    pub affinity_cate_id_1: i32,
    pub affinity_modify_rate_1: f32,
    pub affinity_cate_id_2: i32,
    pub affinity_modify_rate_2: f32,
    pub affinity_cate_id_3: i32,
    pub affinity_modify_rate_3: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GemDropDopingParam {
    pub rank_min: i32,
    pub rank_max: i32,
    pub normal_distribution_ave: i32,
    pub normal_distribution_sigma: i32,
    pub slot_type_a: f32,
    pub slot_type_b: f32,
    pub slot_type_c: f32,
    pub slot_type_d: f32,
    pub slot_type_e: f32,
    pub slot_type_f: f32,
    pub directional_id_rate_0: f32,
    pub directional_id_rate_1: f32,
    pub directional_id_rate_2: f32,
    pub directional_id_rate_3: f32,
    pub directional_id_rate_4: f32,
    pub directional_id_rate_5: f32,
    pub directional_id_rate_6: f32,
    pub directional_id_rate_7: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GemDropModifyParam {
    pub slot_type_rate_a: f32,
    pub slot_type_rate_b: f32,
    pub slot_type_rate_c: f32,
    pub slot_type_rate_d: f32,
    pub slot_type_rate_e: f32,
    pub slot_type_rate_f: f32,
    pub directional_id_rate_0: f32,
    pub directional_id_rate_1: f32,
    pub directional_id_rate_2: f32,
    pub directional_id_rate_3: f32,
    pub directional_id_rate_4: f32,
    pub directional_id_rate_5: f32,
    pub directional_id_rate_6: f32,
    pub directional_id_rate_7: f32,
    pub affinity_cate_id_0: i32,
    pub affinity_modify_rate_0: f32,
    pub affinity_cate_id_1: i32,
    pub affinity_modify_rate_1: f32,
    pub affinity_cate_id_2: i32,
    pub affinity_modify_rate_2: f32,
    pub affinity_cate_id_3: i32,
    pub affinity_modify_rate_3: f32,
    pub manifest_rate_0: f32,
    pub manifest_rate_1: f32,
    pub manifest_rate_2: f32,
    pub manifest_rate_3: f32,
    pub manifest_rate_4: f32,
    pub manifest_rate_5: f32,
    pub negativize_rate_0: f32,
    pub normal_distribution_ave: i32,
    pub normal_distribution_sigma: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GemeffectParam {
    pub sp_effect_id: i32,
    pub category_id: i32,
    pub effect_rank: i32,
    pub rank_min: i32,
    pub rank_max: i32,
    pub disposal_price: i32,
    pub gem_icon_id_offset: i16,
    pub pad1: [u8; 2],
    pub sp_effect_id_for_atk: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GemGenParam {
    pub pad: [u8; 3],
    pub field0x04: i32,
    pub gem_name_id_offset: i32,
    pub disable_slot_rate_modify: i32,
    pub slot_type_rate_a: f32,
    pub slot_type_rate_b: f32,
    pub slot_type_rate_c: f32,
    pub slot_type_rate_d: f32,
    pub slot_type_rate_e: f32,
    pub slot_type_rate_f: f32,
    pub gem_rank_doping: u8,
    pub pad1: [u8; 3],
    pub gemeffect_gen_param_type_0: i32,
    pub gemeffect_gen_param_0: i32,
    pub manifest_rate_0: f32,
    pub negativize_rate_0: f32,
    pub gemeffect_gen_param_type_1: i32,
    pub gemeffect_gen_param_1: i32,
    pub manifest_rate_1: f32,
    pub negativize_rate_1: f32,
    pub gemeffect_gen_param_type_2: i32,
    pub gemeffect_gen_param_2: i32,
    pub manifest_rate_2: f32,
    pub negativize_rate_2: f32,
    pub gemeffect_gen_param_type_3: i32,
    pub gemeffect_gen_param_3: i32,
    pub manifest_rate_3: f32,
    pub negativize_rate_3: f32,
    pub gemeffect_gen_param_type_4: i32,
    pub gemeffect_gen_param_4: i32,
    pub manifest_rate_4: f32,
    pub negativize_rate_4: f32,
    pub gemeffect_gen_param_type_5: i32,
    pub gemeffect_gen_param_5: i32,
    pub manifest_rate_5: f32,
    pub negativize_rate_5: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitEffectSeParam {
    pub h00_hit_effect_se_id0: i32,
    pub h00_hit_effect_se_id1: i32,
    pub h00_hit_effect_se_id2: i32,
    pub h00_hit_effect_se_id3: i32,
    pub h00_hit_effect_se_id4: i32,
    pub h00_hit_effect_se_id5: i32,
    pub h00_hit_effect_se_id6: i32,
    pub h00_hit_effect_se_id7: i32,
    pub h01_hit_effect_se_id0: i32,
    pub h01_hit_effect_se_id1: i32,
    pub h01_hit_effect_se_id2: i32,
    pub h01_hit_effect_se_id3: i32,
    pub h01_hit_effect_se_id4: i32,
    pub h01_hit_effect_se_id5: i32,
    pub h01_hit_effect_se_id6: i32,
    pub h01_hit_effect_se_id7: i32,
    pub h02_hit_effect_se_id0: i32,
    pub h02_hit_effect_se_id1: i32,
    pub h02_hit_effect_se_id2: i32,
    pub h02_hit_effect_se_id3: i32,
    pub h02_hit_effect_se_id4: i32,
    pub h02_hit_effect_se_id5: i32,
    pub h02_hit_effect_se_id6: i32,
    pub h02_hit_effect_se_id7: i32,
    pub h03_hit_effect_se_id0: i32,
    pub h03_hit_effect_se_id1: i32,
    pub h03_hit_effect_se_id2: i32,
    pub h03_hit_effect_se_id3: i32,
    pub h03_hit_effect_se_id4: i32,
    pub h03_hit_effect_se_id5: i32,
    pub h03_hit_effect_se_id6: i32,
    pub h03_hit_effect_se_id7: i32,
    pub h04_hit_effect_se_id0: i32,
    pub h04_hit_effect_se_id1: i32,
    pub h04_hit_effect_se_id2: i32,
    pub h04_hit_effect_se_id3: i32,
    pub h04_hit_effect_se_id4: i32,
    pub h04_hit_effect_se_id5: i32,
    pub h04_hit_effect_se_id6: i32,
    pub h04_hit_effect_se_id7: i32,
    pub h05_hit_effect_se_id0: i32,
    pub h05_hit_effect_se_id1: i32,
    pub h05_hit_effect_se_id2: i32,
    pub h05_hit_effect_se_id3: i32,
    pub h05_hit_effect_se_id4: i32,
    pub h05_hit_effect_se_id5: i32,
    pub h05_hit_effect_se_id6: i32,
    pub h05_hit_effect_se_id7: i32,
    pub h06_hit_effect_se_id0: i32,
    pub h06_hit_effect_se_id1: i32,
    pub h06_hit_effect_se_id2: i32,
    pub h06_hit_effect_se_id3: i32,
    pub h06_hit_effect_se_id4: i32,
    pub h06_hit_effect_se_id5: i32,
    pub h06_hit_effect_se_id6: i32,
    pub h06_hit_effect_se_id7: i32,
    pub h07_hit_effect_se_id0: i32,
    pub h07_hit_effect_se_id1: i32,
    pub h07_hit_effect_se_id2: i32,
    pub h07_hit_effect_se_id3: i32,
    pub h07_hit_effect_se_id4: i32,
    pub h07_hit_effect_se_id5: i32,
    pub h07_hit_effect_se_id6: i32,
    pub h07_hit_effect_se_id7: i32,
    pub h08_hit_effect_se_id0: i32,
    pub h08_hit_effect_se_id1: i32,
    pub h08_hit_effect_se_id2: i32,
    pub h08_hit_effect_se_id3: i32,
    pub h08_hit_effect_se_id4: i32,
    pub h08_hit_effect_se_id5: i32,
    pub h08_hit_effect_se_id6: i32,
    pub h08_hit_effect_se_id7: i32,
    pub h09_hit_effect_se_id0: i32,
    pub h09_hit_effect_se_id1: i32,
    pub h09_hit_effect_se_id2: i32,
    pub h09_hit_effect_se_id3: i32,
    pub h09_hit_effect_se_id4: i32,
    pub h09_hit_effect_se_id5: i32,
    pub h09_hit_effect_se_id6: i32,
    pub h09_hit_effect_se_id7: i32,
    pub h10_hit_effect_se_id0: i32,
    pub h10_hit_effect_se_id1: i32,
    pub h10_hit_effect_se_id2: i32,
    pub h10_hit_effect_se_id3: i32,
    pub h10_hit_effect_se_id4: i32,
    pub h10_hit_effect_se_id5: i32,
    pub h10_hit_effect_se_id6: i32,
    pub h10_hit_effect_se_id7: i32,
    pub h11_hit_effect_se_id0: i32,
    pub h11_hit_effect_se_id1: i32,
    pub h11_hit_effect_se_id2: i32,
    pub h11_hit_effect_se_id3: i32,
    pub h11_hit_effect_se_id4: i32,
    pub h11_hit_effect_se_id5: i32,
    pub h11_hit_effect_se_id6: i32,
    pub h11_hit_effect_se_id7: i32,
    pub h12_hit_effect_se_id0: i32,
    pub h12_hit_effect_se_id1: i32,
    pub h12_hit_effect_se_id2: i32,
    pub h12_hit_effect_se_id3: i32,
    pub h12_hit_effect_se_id4: i32,
    pub h12_hit_effect_se_id5: i32,
    pub h12_hit_effect_se_id6: i32,
    pub h12_hit_effect_se_id7: i32,
    pub h13_hit_effect_se_id0: i32,
    pub h13_hit_effect_se_id1: i32,
    pub h13_hit_effect_se_id2: i32,
    pub h13_hit_effect_se_id3: i32,
    pub h13_hit_effect_se_id4: i32,
    pub h13_hit_effect_se_id5: i32,
    pub h13_hit_effect_se_id6: i32,
    pub h13_hit_effect_se_id7: i32,
    pub h14_hit_effect_se_id0: i32,
    pub h14_hit_effect_se_id1: i32,
    pub h14_hit_effect_se_id2: i32,
    pub h14_hit_effect_se_id3: i32,
    pub h14_hit_effect_se_id4: i32,
    pub h14_hit_effect_se_id5: i32,
    pub h14_hit_effect_se_id6: i32,
    pub h14_hit_effect_se_id7: i32,
    pub h15_hit_effect_se_id0: i32,
    pub h15_hit_effect_se_id1: i32,
    pub h15_hit_effect_se_id2: i32,
    pub h15_hit_effect_se_id3: i32,
    pub h15_hit_effect_se_id4: i32,
    pub h15_hit_effect_se_id5: i32,
    pub h15_hit_effect_se_id6: i32,
    pub h15_hit_effect_se_id7: i32,
    pub h16_hit_effect_se_id0: i32,
    pub h16_hit_effect_se_id1: i32,
    pub h16_hit_effect_se_id2: i32,
    pub h16_hit_effect_se_id3: i32,
    pub h16_hit_effect_se_id4: i32,
    pub h16_hit_effect_se_id5: i32,
    pub h16_hit_effect_se_id6: i32,
    pub h16_hit_effect_se_id7: i32,
    pub h17_hit_effect_se_id0: i32,
    pub h17_hit_effect_se_id1: i32,
    pub h17_hit_effect_se_id2: i32,
    pub h17_hit_effect_se_id3: i32,
    pub h17_hit_effect_se_id4: i32,
    pub h17_hit_effect_se_id5: i32,
    pub h17_hit_effect_se_id6: i32,
    pub h17_hit_effect_se_id7: i32,
    pub h18_hit_effect_se_id0: i32,
    pub h18_hit_effect_se_id1: i32,
    pub h18_hit_effect_se_id2: i32,
    pub h18_hit_effect_se_id3: i32,
    pub h18_hit_effect_se_id4: i32,
    pub h18_hit_effect_se_id5: i32,
    pub h18_hit_effect_se_id6: i32,
    pub h18_hit_effect_se_id7: i32,
    pub h19_hit_effect_se_id0: i32,
    pub h19_hit_effect_se_id1: i32,
    pub h19_hit_effect_se_id2: i32,
    pub h19_hit_effect_se_id3: i32,
    pub h19_hit_effect_se_id4: i32,
    pub h19_hit_effect_se_id5: i32,
    pub h19_hit_effect_se_id6: i32,
    pub h19_hit_effect_se_id7: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitEffectSfxConceptParam {
    pub sfx_concept_id0: i16,
    pub sfx_concept_id1: i16,
    pub sfx_concept_id2: i16,
    pub sfx_concept_id3: i16,
    pub sfx_concept_id4: i16,
    pub sfx_concept_id5: i16,
    pub sfx_concept_id6: i16,
    pub sfx_concept_id7: i16,
    pub sfx_concept_id8: i16,
    pub sfx_concept_id9: i16,
    pub sfx_concept_id10: i16,
    pub sfx_concept_id11: i16,
    pub sfx_concept_id12: i16,
    pub sfx_concept_id13: i16,
    pub sfx_concept_id14: i16,
    pub sfx_concept_id15: i16,
    pub sfx_concept_id16: i16,
    pub sfx_concept_id17: i16,
    pub sfx_concept_id18: i16,
    pub sfx_concept_id19: i16,
    pub sfx_concept_id20: i16,
    pub sfx_concept_id21: i16,
    pub sfx_concept_id22: i16,
    pub sfx_concept_id23: i16,
    pub sfx_concept_id24: i16,
    pub sfx_concept_id25: i16,
    pub sfx_concept_id26: i16,
    pub sfx_concept_id27: i16,
    pub sfx_concept_id28: i16,
    pub sfx_concept_id29: i16,
    pub pad1: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitEffectSfxParam {
    pub hit_sfx_id0: i32,
    pub hit_sfx_id1: i32,
    pub hit_sfx_id2: i32,
    pub hit_sfx_id3: i32,
    pub hit_sfx_id4: i32,
    pub hit_sfx_id5: i32,
    pub hit_sfx_id6: i32,
    pub hit_sfx_id7: i32,
    pub hit_sfx_id8: i32,
    pub hit_sfx_id9: i32,
    pub hit_sfx_id10: i32,
    pub hit_sfx_id11: i32,
    pub hit_sfx_id12: i32,
    pub hit_sfx_id13: i32,
    pub hit_sfx_id14: i32,
    pub hit_sfx_id15: i32,
    pub pad1: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitMtrlParam {
    pub ai_volume_rate: f32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    #[bitflag(FootEffectHeightType0, 0)]
    #[bitflag(FootEffectHeightType1, 1)]
    #[bitflag(footEffectDirType0, 2)]
    #[bitflag(footEffectDirType1, 3)]
    #[bitflag(newSpType0, 4)]
    #[bitflag(newSpType1, 5)]
    #[bitflag(unkb1, 6)]
    #[bitflag(unkb2, 7)]
    pub bitfield0: u8,
    pub hit_mtrl_type0: u8,
    pub hit_mtrl_type1: u8,
    pub hit_mtrl_type2: u8,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub sp_effect_id5: i32,
    pub sp_effect_id6: i32,
    pub sp_effect_id7: i32,
    pub sp_effect_id8: i32,
    pub sp_effect_id9: i32,
    pub sp_effect_id10: i32,
    pub sp_effect_id11: i32,
    pub sp_effect_id12: i32,
    pub sp_effect_id13: i32,
    pub sp_effect_id14: i32,
    pub sp_effect_id15: i32,
    pub sp_effect_id16: i32,
    pub pad1: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HPEstusFlaskRecoveryParam {
    pub recovery_count0: u8,
    pub recovery_count1: u8,
    pub recovery_count2: u8,
    pub recovery_count3: u8,
    pub recovery_count4: u8,
    pub recovery_count5: u8,
    pub recovery_count6: u8,
    pub recovery_count7: u8,
    pub recovery_count8: u8,
    pub recovery_count9: u8,
    pub recovery_count10: u8,
    pub recovery_count11: u8,
    pub recovery_count12: u8,
    pub recovery_count13: u8,
    pub recovery_count14: u8,
    pub recovery_count15: u8,
    pub recovery_count16: u8,
    pub recovery_count17: u8,
    pub recovery_count18: u8,
    pub recovery_count19: u8,
    pub recovery_count20: u8,
    pub recovery_count21: u8,
    pub recovery_count22: u8,
    pub recovery_count23: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ItemLotParam {
    pub item_lot_id1: i32,
    pub item_lot_id2: i32,
    pub item_lot_id3: i32,
    pub item_lot_id4: i32,
    pub item_lot_id5: i32,
    pub item_lot_id6: i32,
    pub item_lot_id7: i32,
    pub item_lot_id8: i32,
    pub lot_item_category01: u32,
    pub lot_item_category02: u32,
    pub lot_item_category03: u32,
    pub lot_item_category04: u32,
    pub lot_item_category05: u32,
    pub lot_item_category06: u32,
    pub lot_item_category07: u32,
    pub lot_item_category08: u32,
    pub lot_item_base_point01: i16,
    pub lot_item_base_point02: i16,
    pub lot_item_base_point03: i16,
    pub lot_item_base_point04: i16,
    pub lot_item_base_point05: i16,
    pub lot_item_base_point06: i16,
    pub lot_item_base_point07: i16,
    pub lot_item_base_point08: i16,
    pub cumulate_lot_point01: i16,
    pub cumulate_lot_point02: i16,
    pub cumulate_lot_point03: i16,
    pub cumulate_lot_point04: i16,
    pub cumulate_lot_point05: i16,
    pub cumulate_lot_point06: i16,
    pub cumulate_lot_point07: i16,
    pub cumulate_lot_point08: i16,
    pub get_item_flag_id01: i32,
    pub get_item_flag_id02: i32,
    pub get_item_flag_id03: i32,
    pub get_item_flag_id04: i32,
    pub get_item_flag_id05: i32,
    pub get_item_flag_id06: i32,
    pub get_item_flag_id07: i32,
    pub get_item_flag_id08: i32,
    pub get_item_flag_id: i32,
    pub cumulate_num_flag_id: i32,
    pub cumulate_num_max: u8,
    pub lot_item_rarity: u8,
    pub lot_item_num1: u8,
    pub lot_item_num2: u8,
    pub lot_item_num3: u8,
    pub lot_item_num4: u8,
    pub lot_item_num5: u8,
    pub lot_item_num6: u8,
    pub lot_item_num7: u8,
    pub lot_item_num8: u8,
    #[bitflag(EnableLuck01, 0)]
    #[bitflag(EnableLuck02, 1)]
    #[bitflag(EnableLuck03, 2)]
    #[bitflag(EnableLuck04, 3)]
    #[bitflag(EnableLuck05, 4)]
    #[bitflag(EnableLuck06, 5)]
    #[bitflag(EnableLuck07, 6)]
    #[bitflag(EnableLuck08, 7)]
    pub bitfield0: u8,
    #[bitflag(cumulateReset01, 0)]
    #[bitflag(cumulateReset02, 1)]
    #[bitflag(cumulateReset03, 2)]
    #[bitflag(cumulateReset04, 3)]
    #[bitflag(cumulateReset05, 4)]
    #[bitflag(cumulateReset06, 5)]
    #[bitflag(cumulateReset07, 6)]
    #[bitflag(cumulateReset08, 7)]
    pub bitfield1: u8,
    pub clear_count: i8,
    pub pad1: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct KnockBackParam {
    pub damage_min_cont_time: f32,
    pub damage_s_cont_time: f32,
    pub damage_m_cont_time: f32,
    pub damage_l_cont_time: f32,
    pub damage_blow_s_cont_time: f32,
    pub damage_blow_m_cont_time: f32,
    pub damage_strike_cont_time: f32,
    pub damage_uppercut_cont_time: f32,
    pub damage_push_cont_time: f32,
    pub damage_breath_cont_time: f32,
    pub damage_head_shot_cont_time: f32,
    pub guard_s_cont_time: f32,
    pub guard_l_cont_time: f32,
    pub guard_ll_cont_time: f32,
    pub guard_brake_cont_time: f32,
    pub damage_min_dec_time: f32,
    pub damage_s_dec_time: f32,
    pub damage_m_dec_time: f32,
    pub damage_l_dec_time: f32,
    pub damage_blow_s_dec_time: f32,
    pub damage_blow_m_dec_time: f32,
    pub damage_strike_dec_time: f32,
    pub damage_uppercut_dec_time: f32,
    pub damage_push_dec_time: f32,
    pub damage_breath_dec_time: f32,
    pub damage_head_shot_dec_time: f32,
    pub guard_s_dec_time: f32,
    pub guard_l_dec_time: f32,
    pub guard_ll_dec_time: f32,
    pub guard_brake_dec_time: f32,
    pub pad1: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct KnowledgeLoadScreenItemParam {
    pub loadscreen_category_id: u32,
    pub knowledge_id: i32,
    pub pad1: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LoadBalancerDrawDistScaleParam {
    pub lod_dist_draw_scale0: f32,
    pub lod_dist_draw_scale1: f32,
    pub lod_dist_draw_scale2: f32,
    pub lod_dist_draw_scale3: f32,
    pub lod_dist_draw_scale4: f32,
    pub lod_dist_draw_scale5: f32,
    pub lod_dist_draw_scale6: f32,
    pub lod_dist_draw_scale7: f32,
    pub lod_dist_draw_scale8: f32,
    pub lod_dist_draw_scale9: f32,
    pub lod_dist_draw_scale10: f32,
    pub lod_dist_draw_scale11: f32,
    pub lod_dist_draw_scale12: f32,
    pub lod_dist_draw_scale13: f32,
    pub lod_dist_draw_scale14: f32,
    pub lod_dist_draw_scale15: f32,
    pub lod_dist_draw_scale16: f32,
    pub lod_dist_draw_scale17: f32,
    pub lod_dist_draw_scale18: f32,
    pub lod_dist_draw_scale19: f32,
    pub lod_dist_draw_scale20: f32,
    pub pad1: [u8; 44],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LoadBalancerParam {
    pub unk1: f32,
    pub unk2: f32,
    pub unk3: i32,
    pub unk4: i32,
    pub unk5: i32,
    pub unk6: i32,
    pub load_balancer_val0: u8,
    pub load_balancer_val1: u8,
    pub load_balancer_val2: u8,
    pub load_balancer_val3: u8,
    pub load_balancer_val4: u8,
    pub load_balancer_val5: u8,
    pub load_balancer_val6: u8,
    pub load_balancer_val7: u8,
    pub load_balancer_val8: u8,
    pub load_balancer_val9: u8,
    pub load_balancer_val10: u8,
    pub load_balancer_val11: u8,
    pub load_balancer_val12: u8,
    pub load_balancer_val13: u8,
    pub load_balancer_val14: u8,
    pub load_balancer_val15: u8,
    pub load_balancer_val16: u8,
    pub load_balancer_val17: u8,
    pub pad1: [u8; 38],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LockCamParam {
    pub cam_dist_target: f32,
    pub rot_range_min_x: f32,
    pub lock_rot_xshift_ratio: f32,
    pub chr_org_offset_z: f32,
    pub chr_lock_range_max_radius: f32,
    pub fov_ychange: f32,
    pub chr_lock_range_max_radius_for_dark: f32,
    pub chr_lock_range_max_radius_for_pitch_dark: f32,
    pub melee_attack_capture_upper_limit_height: f32,
    pub attack_capture_lower_limit_height: f32,
    pub attack_auto_acquisition_angle_range_left: f32,
    pub melee_attack_auto_acquisition_character_range_maximum_radius: f32,
    pub melee_attack_auto_acquisition_dark_character_range_maximum_radius: f32,
    pub proximity_attack_auto_acquisition_character_range_for_pure_darkness_maximum_radius: f32,
    pub bullet_auto_capture_character_range_maximum_radius: f32,
    pub bullet_auto_capture_dark_character_range_maximum_radius: f32,
    pub bullet_automatic_capture_character_range_ror_pure_darkness_maximum_radius: f32,
    pub bullet_auto_capturing_angle_range_left_and_right: f32,
    pub pad1: [u8; 28],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LodParam {
    pub lv01_border_dist: f32,
    pub lv01_play_dist: f32,
    pub lv12_border_dist: f32,
    pub lv12_play_dist: f32,
    pub texture_lod: u8,
    pub pad1: [u8; 3],
    pub lv23_border_dist: f32,
    pub lv23_play_dist: f32,
    pub lv34_border_dist: f32,
    pub lv34_play_dist: f32,
    pub lv45_border_dist: f32,
    pub lv45_play_dist: f32,
    pub distance_scale_id: u8,
    pub pad2: [u8; 19],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LodParam_ps4 {
    pub lv01_border_dist: f32,
    pub lv01_play_dist: f32,
    pub lv12_border_dist: f32,
    pub lv12_play_dist: f32,
    pub texture_lod: u8,
    pub pad1: [u8; 3],
    pub lv23_border_dist: f32,
    pub lv23_play_dist: f32,
    pub lv34_border_dist: f32,
    pub lv34_play_dist: f32,
    pub lv45_border_dist: f32,
    pub lv45_play_dist: f32,
    pub distance_scale_id: u8,
    pub pad2: [u8; 19],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LodParam_xb1 {
    pub lv01_border_dist: f32,
    pub lv01_play_dist: f32,
    pub lv12_border_dist: f32,
    pub lv12_play_dist: f32,
    pub texture_lod: u8,
    pub pad1: [u8; 3],
    pub lv23_border_dist: f32,
    pub lv23_play_dist: f32,
    pub lv34_border_dist: f32,
    pub lv34_play_dist: f32,
    pub lv45_border_dist: f32,
    pub lv45_play_dist: f32,
    pub distance_scale_id: u8,
    pub pad2: [u8; 19],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Magic {
    pub yes_no_dialog_message_id: i32,
    pub limit_cancel_sp_effect_id: i32,
    pub sort_id: i16,
    pub ref_id: i16,
    pub ref_id_fp_cost1: i16,
    pub ref_id_sp_cost1: i16,
    pub icon_id: i16,
    pub behavior_id: i16,
    pub mtrl_item_id: i16,
    pub replace_magic_id: i16,
    pub max_quantity: i16,
    pub hero_point: u8,
    pub over_dexterity: u8,
    pub sfx_variation_id: u8,
    pub slot_length: u8,
    pub requirement_intellect: u8,
    pub requirement_faith: u8,
    pub analog_dexterity_min: u8,
    pub analog_dexterity_max: u8,
    pub ez_state_behavior_type: u8,
    pub ref_category1: u8,
    pub sp_effect_category: u8,
    pub ref_type: u8,
    pub menu_type: u8,
    pub ref_category4: u8,
    pub has_sp_effect_type: i16,
    #[bitflag(VowType0, 0)]
    #[bitflag(VowType1, 1)]
    #[bitflag(VowType2, 2)]
    #[bitflag(VowType3, 3)]
    #[bitflag(VowType4, 4)]
    #[bitflag(VowType5, 5)]
    #[bitflag(VowType6, 6)]
    #[bitflag(VowType7, 7)]
    pub bitfield0: u8,
    #[bitflag(enableMulti, 0)]
    #[bitflag(enableMultOnly, 1)]
    #[bitflag(isEnchant, 2)]
    #[bitflag(isShieldEnchant, 3)]
    #[bitflag(enable_live, 4)]
    #[bitflag(enable_gray, 5)]
    #[bitflag(enable_white, 6)]
    #[bitflag(enable_black, 7)]
    pub bitfield1: u8,
    #[bitflag(disable_offline, 0)]
    #[bitflag(castResonanceMagic, 1)]
    #[bitflag(Unk1, 2)]
    #[bitflag(Unk2, 3)]
    #[bitflag(Unk3, 4)]
    #[bitflag(Unk4, 5)]
    #[bitflag(Unk5, 6)]
    #[bitflag(Unk6, 7)]
    pub bitfield2: u8,
    #[bitflag(VowType8, 0)]
    #[bitflag(VowType9, 1)]
    #[bitflag(VowType10, 2)]
    #[bitflag(VowType11, 3)]
    #[bitflag(VowType12, 4)]
    #[bitflag(VowType13, 5)]
    #[bitflag(VowType14, 6)]
    #[bitflag(VowType15, 7)]
    pub bitfield3: u8,
    pub unk7: u8,
    pub unk8: u8,
    pub cast_sfx1: i32,
    pub cast_sfx2: i32,
    pub cast_sfx3: i32,
    pub unk9: i32,
    pub attribute_type: u8,
    pub attribute_val0: i8,
    pub attribute_val1: i8,
    pub attribute_val2: i8,
    pub attribute_val3: i8,
    pub ref_category2: u8,
    pub ref_id_sp_cost4: i16,
    pub magic_id0: i32,
    pub magic_id1: i32,
    pub magic_id2: i32,
    pub magic_id3: i32,
    pub ref_id_fp_cost2: i16,
    pub ref_id_sp_cost2: i16,
    pub unk10: u8,
    pub ref_category3: u8,
    pub ref_id_fp_cost4: i16,
    pub ref_id_fp_cost3: i16,
    pub ref_id_sp_cost3: i16,
    pub ref_id1: i32,
    pub ref_id2: i32,
    pub ref_id3: i32,
    pub ref_id4: i32,
    pub pad1: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapMimicryEstablishmentParam {
    pub randomizer_coefficient0: f32,
    pub randomizer_coefficient1: f32,
    pub randomizer_coefficient2: f32,
    pub transform_vfx_id0: i32,
    pub loop_vfx_id0: i32,
    pub destroy_vfx_id0: i32,
    pub transform_vfx_id1: i32,
    pub loop_vfx_id1: i32,
    pub destroy_vfx_id1: i32,
    pub transform_vfx_id2: i32,
    pub loop_vfx_id2: i32,
    pub destroy_vfx_id2: i32,
    pub pad1: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuOffscrRendParam {
    pub menu_content0: f32,
    pub menu_content0_0: f32,
    pub menu_content0_1: f32,
    pub menu_content1: f32,
    pub menu_content1_2: f32,
    pub menu_content1_3: f32,
    pub menu_content1_4: f32,
    pub pad1: [u8; 16],
    pub screen_rend_id: i32,
    pub pad2: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuPropertyLayoutParam {
    pub layout_path: [u8; 16],
    pub property_id: i32,
    pub caption_text_id: i32,
    pub help_text_id: i32,
    pub pad1: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuPropertySpecParam {
    pub caption_text_id: i32,
    pub icon_id: i32,
    pub required_property_id: i32,
    pub compare_type: u8,
    pub required_property_format_id: u8,
    pub adhoc_caption: [u16; 9],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuValueTableParam {
    pub value: i32,
    pub text_id: i32,
    pub compare_type: u8,
    pub pad1: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ModelSfxParam {
    pub vfx_id1: i32,
    pub dummy_poly_id1: i32,
    pub pad1: [u8; 8],
    pub vfx_id2: i32,
    pub dummy_poly_id2: i32,
    pub pad2: [u8; 8],
    pub vfx_id3: i32,
    pub dummy_poly_id3: i32,
    pub pad3: [u8; 0],
    pub vfx_id4: i32,
    pub dummy_poly_id4: i32,
    pub pad4: [u8; 0],
    pub vfx_id5: i32,
    pub dummy_poly_id5: i32,
    pub pad5: [u8; 0],
    pub vfx_id6: i32,
    pub dummy_poly_id6: i32,
    pub pad6: [u8; 0],
    pub vfx_id7: i32,
    pub dummy_poly_id7: i32,
    pub pad7: [u8; 8],
    pub vfx_id8: i32,
    pub dummy_poly_id8: i32,
    pub pad8: [u8; 8],
    pub vfx_id9: i32,
    pub dummy_poly_id9: i32,
    pub pad9: [u8; 8],
    pub vfx_id10: i32,
    pub dummy_poly_id10: i32,
    pub pad10: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MoveParam {
    pub stay_id: i32,
    pub walk_f: i32,
    pub walk_b: i32,
    pub walk_l: i32,
    pub walk_r: i32,
    pub dash_f: i32,
    pub dash_b: i32,
    pub dash_l: i32,
    pub dash_r: i32,
    pub super_dash: i32,
    pub escape_f: i32,
    pub escape_b: i32,
    pub escape_l: i32,
    pub escape_r: i32,
    pub turn_l: i32,
    pub turn_r: i32,
    pub large_turn_l: i32,
    pub large_turn_r: i32,
    pub step_move: i32,
    pub fly_stay: i32,
    pub fly_walk_f: i32,
    pub fly_walk_fl: i32,
    pub fly_walk_fr: i32,
    pub fly_walk_fl2: i32,
    pub fly_walk_fr2: i32,
    pub fly_dash_f: i32,
    pub fly_dash_fl: i32,
    pub fly_dash_fr: i32,
    pub fly_dash_fl2: i32,
    pub fly_dash_fr2: i32,
    pub dash_escape_f: i32,
    pub dash_escape_b: i32,
    pub dash_escape_l: i32,
    pub dash_escape_r: i32,
    pub analog_move_param_id: i32,
    pub turn_no_anim_angle: u8,
    pub turn45_angle: u8,
    pub turn90_angle: u8,
    pub turn_wait_no_anim_angle: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MPEstusFlaskRecoveryParam {
    pub recovery_count0: u8,
    pub recovery_count1: u8,
    pub recovery_count2: u8,
    pub recovery_count3: u8,
    pub recovery_count4: u8,
    pub recovery_count5: u8,
    pub recovery_count6: u8,
    pub recovery_count7: u8,
    pub recovery_count8: u8,
    pub recovery_count9: u8,
    pub recovery_count10: u8,
    pub recovery_count11: u8,
    pub recovery_count12: u8,
    pub recovery_count13: u8,
    pub recovery_count14: u8,
    pub recovery_count15: u8,
    pub recovery_count16: u8,
    pub recovery_count17: u8,
    pub recovery_count18: u8,
    pub recovery_count19: u8,
    pub recovery_count20: u8,
    pub recovery_count21: u8,
    pub recovery_count22: u8,
    pub recovery_count23: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiHPEstusFlaskBonusParam {
    pub estus_flask_restore_count0: u8,
    pub estus_flask_restore_count1: u8,
    pub estus_flask_restore_count2: u8,
    pub estus_flask_restore_count3: u8,
    pub estus_flask_restore_count4: u8,
    pub estus_flask_restore_count5: u8,
    pub estus_flask_restore_count6: u8,
    pub estus_flask_restore_count7: u8,
    pub estus_flask_restore_count8: u8,
    pub estus_flask_restore_count9: u8,
    pub estus_flask_restore_count10: u8,
    pub estus_flask_restore_count11: u8,
    pub estus_flask_restore_count12: u8,
    pub estus_flask_restore_count13: u8,
    pub estus_flask_restore_count14: u8,
    pub estus_flask_restore_count15: u8,
    pub estus_flask_restore_count16: u8,
    pub estus_flask_restore_count17: u8,
    pub estus_flask_restore_count18: u8,
    pub estus_flask_restore_count19: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiMPEstusFlaskBonusParam {
    pub estus_flask_restore_count0: u8,
    pub estus_flask_restore_count1: u8,
    pub estus_flask_restore_count2: u8,
    pub estus_flask_restore_count3: u8,
    pub estus_flask_restore_count4: u8,
    pub estus_flask_restore_count5: u8,
    pub estus_flask_restore_count6: u8,
    pub estus_flask_restore_count7: u8,
    pub estus_flask_restore_count8: u8,
    pub estus_flask_restore_count9: u8,
    pub estus_flask_restore_count10: u8,
    pub estus_flask_restore_count11: u8,
    pub estus_flask_restore_count12: u8,
    pub estus_flask_restore_count13: u8,
    pub estus_flask_restore_count14: u8,
    pub estus_flask_restore_count15: u8,
    pub estus_flask_restore_count16: u8,
    pub estus_flask_restore_count17: u8,
    pub estus_flask_restore_count18: u8,
    pub estus_flask_restore_count19: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiPlayCorrectionParam {
    pub correction_val0: i32,
    pub correction_val1: i32,
    pub correction_val2: i32,
    pub correction_val3: i32,
    pub pad1: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiSoulBonusRateParam {
    pub soul_multiplier_rate0: f32,
    pub soul_multiplier_rate1: f32,
    pub soul_multiplier_rate2: f32,
    pub soul_multiplier_rate3: f32,
    pub soul_multiplier_rate4: f32,
    pub soul_multiplier_rate5: f32,
    pub soul_multiplier_rate6: f32,
    pub soul_multiplier_rate7: f32,
    pub soul_multiplier_rate8: f32,
    pub soul_multiplier_rate9: f32,
    pub soul_multiplier_rate10: f32,
    pub soul_multiplier_rate11: f32,
    pub soul_multiplier_rate12: f32,
    pub soul_multiplier_rate13: f32,
    pub soul_multiplier_rate14: f32,
    pub soul_multiplier_rate15: f32,
    pub pad1: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NetworkAreaParam {
    pub limitation_time0: f32,
    pub limitation_time1: f32,
    pub limitation_time2: f32,
    pub pad1: [u8; 12],
    #[bitflag(isEnable00, 0)]
    #[bitflag(isEnable01, 1)]
    #[bitflag(isEnable02, 2)]
    #[bitflag(unkb1, 3)]
    #[bitflag(unkb2, 4)]
    #[bitflag(unkb3, 5)]
    #[bitflag(unkb4, 6)]
    #[bitflag(unkb5, 7)]
    pub bitfield0: u8,
    pub pad2: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NetworkMsgParam {
    pub msg_type0: u8,
    pub msg_type1: u8,
    pub msg_type2: u8,
    pub msg_type3: u8,
    pub msg_id0: i32,
    pub msg_id1: i32,
    pub msg_id2: i32,
    pub msg_id3: i32,
    pub msg_id4: i32,
    pub msg_id5: i32,
    pub msg_id6: i32,
    pub msg_id7: i32,
    pub msg_id8: i32,
    pub msg_id9: i32,
    pub msg_id10: i32,
    pub msg_id11: i32,
    pub msg_id12: i32,
    pub msg_id13: i32,
    pub msg_id14: i32,
    pub msg_id15: i32,
    pub msg_id16: i32,
    pub msg_id17: i32,
    pub msg_id18: i32,
    pub msg_id19: i32,
    pub msg_id20: i32,
    pub msg_id21: i32,
    pub msg_id22: i32,
    pub pad1: [u8; 48],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NetworkParam {
    pub network_data: [u8; 632],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NewMenuColorTableParam {
    pub r: u8,
    pub g: u8,
    pub b: u8,
    pub a: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcAiActionParam {
    pub direction_movement_id: u8,
    pub act_id0: u8,
    pub act_id1: u8,
    pub act_id2: u8,
    pub is_disable_direction_movement: u8,
    pub is_disable_act0: u8,
    pub is_disable_act1: u8,
    pub is_disable_act2: u8,
    pub act_type: i32,
    pub is_disable_ai_check: u8,
    pub pad1: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcParam {
    pub behavior_variation_id: i32,
    pub ai_think_id: i32,
    pub name_id: i32,
    pub turn_vellocity: f32,
    pub hit_height: f32,
    pub hit_radius: f32,
    pub weight: i32,
    pub hit_offset: f32,
    pub hp: i32,
    pub mp: i32,
    pub get_soul: i32,
    pub item_lot_id1: i32,
    pub item_lot_id2: i32,
    pub item_lot_id3: i32,
    pub item_lot_id4: i32,
    pub item_lot_id5: i32,
    pub item_lot_id6: i32,
    pub humanity_lot_id: i32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub sp_effect_id5: i32,
    pub sp_effect_id6: i32,
    pub sp_effect_id7: i32,
    pub game_clear_sp_effect_id: i32,
    pub phys_guard_cut_rate: f32,
    pub mag_guard_cut_rate: f32,
    pub fire_guard_cut_rate: f32,
    pub thun_guard_cut_rate: f32,
    pub animid_offset: i32,
    pub move_anim_id: i32,
    pub sp_move_anim_id1: i32,
    pub sp_move_anim_id2: i32,
    pub network_warp_disp: f32,
    pub dbg_behavior_r1: i32,
    pub dbg_behavior_l1: i32,
    pub dbg_behavior_r2: i32,
    pub dbg_behavior_l2: i32,
    pub dbg_behavior_rl: i32,
    pub dbg_behavior_rr: i32,
    pub dbg_behavior_rd: i32,
    pub dbg_behavior_ru: i32,
    pub dbg_behavior_ll: i32,
    pub dbg_behavior_lr: i32,
    pub dbg_behavior_ld: i32,
    pub dbg_behavior_lu: i32,
    pub anim_id_offset: i32,
    pub parts_damage_rate1: f32,
    pub parts_damage_rate2: f32,
    pub parts_damage_rate3: f32,
    pub parts_damage_rate4: f32,
    pub parts_damage_rate5: f32,
    pub parts_damage_rate6: f32,
    pub parts_damage_rate7: f32,
    pub parts_damage_rate8: f32,
    pub weak_parts_damage_rate: f32,
    pub super_armor_recover_correction: f32,
    pub super_armor_brake_knockback_dist: f32,
    pub stamina: i16,
    pub stamina_recover_base_val: i16,
    pub def_phys: i16,
    pub def_slash: i16,
    pub def_blow: i16,
    pub def_thrust: i16,
    pub def_mag: i16,
    pub def_fire: i16,
    pub def_thunder: i16,
    pub def_flick_power: i16,
    pub resist_poison: i16,
    pub resist_toxic: i16,
    pub resist_blood: i16,
    pub resist_curse: i16,
    pub ghost_model_id: i16,
    pub normal_change_resource_id: i16,
    pub guard_angle: i16,
    pub slash_guard_cut_rate: i16,
    pub blow_guard_cut_rate: i16,
    pub thrust_guard_cut_rate: i16,
    pub super_armor_durability: i16,
    pub normal_change_tex_chr_id: i16,
    pub drop_type: i16,
    pub knockback_rate: u8,
    pub knockback_param_id: u8,
    pub fall_damage_damp: u8,
    pub stamina_guard_def: u8,
    pub pc_attr_b: u8,
    pub pc_attr_w: u8,
    pub pc_attr_l: u8,
    pub pc_attr_r: u8,
    pub area_attr_b: u8,
    pub area_attr_w: u8,
    pub area_attr_l: u8,
    pub area_attr_r: u8,
    pub mp_recover_base_val: u8,
    pub flick_damage_cut_rate: u8,
    pub default_lod_param_id: i8,
    pub draw_type: u8,
    pub npc_type: u8,
    pub team_type: u8,
    pub move_type: u8,
    pub lock_dist: u8,
    pub material: i16,
    pub material_sfx: i16,
    pub parts_damage_type: u8,
    pub max_unduration_ang: u8,
    pub guard_level: u8,
    pub burnsfx_type: u8,
    pub poison_guard_resist: u8,
    pub toxic_guard_resist: u8,
    pub blood_guard_resist: u8,
    pub curse_guard_resist: u8,
    pub parry_attack: u8,
    pub parry_defense: u8,
    pub sfx_size: u8,
    pub push_out_cam_region_radius: u8,
    pub hit_stop_type: u8,
    pub ladder_end_chk_offset_top: u8,
    pub ladder_end_chk_offset_low: u8,
    #[bitflag(UseRagdollCamHit, 0)]
    #[bitflag(disableClothRigidHit, 1)]
    #[bitflag(UseRagdoll, 2)]
    #[bitflag(isDemon, 3)]
    #[bitflag(isGhost, 4)]
    #[bitflag(isNoDamageMotion, 5)]
    #[bitflag(isUnduration, 6)]
    #[bitflag(isChangeWanderGhost, 7)]
    pub bitfield0: u8,
    #[bitflag(ModelDispMask0, 0)]
    #[bitflag(ModelDispMask1, 1)]
    #[bitflag(ModelDispMask2, 2)]
    #[bitflag(ModelDispMask3, 3)]
    #[bitflag(ModelDispMask4, 4)]
    #[bitflag(ModelDispMask5, 5)]
    #[bitflag(ModelDispMask6, 6)]
    #[bitflag(ModelDispMask7, 7)]
    pub bitfield1: u8,
    #[bitflag(ModelDispMask8, 0)]
    #[bitflag(ModelDispMask9, 1)]
    #[bitflag(ModelDispMask10, 2)]
    #[bitflag(ModelDispMask11, 3)]
    #[bitflag(ModelDispMask12, 4)]
    #[bitflag(ModelDispMask13, 5)]
    #[bitflag(ModelDispMask14, 6)]
    #[bitflag(ModelDispMask15, 7)]
    pub bitfield2: u8,
    #[bitflag(isEnableNeckTurn, 0)]
    #[bitflag(disableRespawn, 1)]
    #[bitflag(isMoveAnimWait, 2)]
    #[bitflag(isCrowd, 3)]
    #[bitflag(isWeakSaint, 4)]
    #[bitflag(isWeakA, 5)]
    #[bitflag(isWeakB, 6)]
    #[bitflag(isEnableDropSoulCapture, 7)]
    pub bitfield3: u8,
    #[bitflag(VowType0, 0)]
    #[bitflag(VowType1, 1)]
    #[bitflag(VowType2, 2)]
    #[bitflag(disableIntiliazeDead, 3)]
    #[bitflag(isSoulGetByBoss, 4)]
    #[bitflag(isMultilingual, 5)]
    #[bitflag(Unk1, 6)]
    #[bitflag(Unk2, 7)]
    pub bitfield4: u8,
    #[bitflag(ModelDispMask16, 0)]
    #[bitflag(ModelDispMask17, 1)]
    #[bitflag(ModelDispMask18, 2)]
    #[bitflag(ModelDispMask19, 3)]
    #[bitflag(ModelDispMask20, 4)]
    #[bitflag(ModelDispMask21, 5)]
    #[bitflag(ModelDispMask22, 6)]
    #[bitflag(ModelDispMask23, 7)]
    pub bitfield5: u8,
    #[bitflag(ModelDispMask24, 0)]
    #[bitflag(ModelDispMask25, 1)]
    #[bitflag(ModelDispMask26, 2)]
    #[bitflag(ModelDispMask27, 3)]
    #[bitflag(ModelDispMask28, 4)]
    #[bitflag(ModelDispMask29, 5)]
    #[bitflag(ModelDispMask30, 6)]
    #[bitflag(ModelDispMask31, 7)]
    pub bitfield6: u8,
    pub item_search_radius: f32,
    pub sub_hit_height: f32,
    pub sub_hit_radius: f32,
    pub turn_velocity_type: u8,
    #[bitflag(isMultModeBoss, 0)]
    #[bitflag(Unk3, 1)]
    #[bitflag(behMemSize, 2)]
    #[bitflag(Unk4, 3)]
    #[bitflag(isUseFeetData, 4)]
    #[bitflag(Unk5, 5)]
    #[bitflag(Unk6, 6)]
    #[bitflag(Unk7, 7)]
    pub bitfield7: u8,
    pub def_dark: i16,
    pub sub_turn_velocity: f32,
    pub foot_step_id: i32,
    pub sub_material: i16,
    pub sub_material_sfx: i16,
    pub material_weak: i16,
    pub material_sfx_weak: i16,
    pub sub_material_weak: i16,
    pub sub_material_sfx_weak: i16,
    pub sp_effect_id8: i32,
    pub sp_effect_id9: i32,
    pub sp_effect_id10: i32,
    pub sp_effect_id11: i32,
    pub sp_effect_id12: i32,
    pub sp_effect_id13: i32,
    pub sp_effect_id14: i32,
    pub sp_effect_id15: i32,
    pub tentative_player_id: i32,
    pub basic_toughness_value: i32,
    pub game_system_param_correction: f32,
    pub regain_rate_phys_neutral: f32,
    pub regain_rate_phys_slash: f32,
    pub regain_rate_phys_blow: f32,
    pub regain_rate_phys_thrust: f32,
    pub regain_rate_magic: f32,
    pub regain_rate_fire: f32,
    pub regain_rate_thunder: f32,
    pub regain_rate_dark: f32,
    pub max_ankle_angle: f32,
    pub cloth_update_offset: i8,
    pub sp_npc_type: u8,
    pub normal_change_model_id: i16,
    pub normal_change_anim_chr_id: i16,
    pub stamina_guard_def_val: i16,
    pub cult_setting_id: i32,
    pub phantom_param_id: i32,
    pub multi_play_correction_id: i32,
    pub foot_ankle: f32,
    pub resist_frost: i16,
    pub sub_npc_type: u8,
    pub sub_team_type: u8,
    pub lock_cam_param_id: i32,
    pub sp_effect_id16: i32,
    pub sp_effect_id17: i32,
    pub sp_effect_id18: i32,
    pub sp_effect_id19: i32,
    pub sp_effect_id20: i32,
    pub sp_effect_id21: i32,
    pub sp_effect_id22: i32,
    pub sp_effect_id23: i32,
    pub sp_effect_id24: i32,
    pub sp_effect_id25: i32,
    pub sp_effect_id26: i32,
    pub sp_effect_id27: i32,
    pub sp_effect_id28: i32,
    pub sp_effect_id29: i32,
    pub sp_effect_id30: i32,
    pub sp_effect_id31: i32,
    pub lock_correction: f32,
    pub sub_cloth_update_offset: i8,
    pub pad1: [u8; 1],
    pub estus_flask_param_id: i16,
    pub text_id: i32,
    pub h_p: i16,
    pub h_p_restore_id0: i16,
    pub m_p_restore_id0: i16,
    pub h_p_0: i16,
    pub h_p_restore_id1: i16,
    pub m_p_restore_id1: i16,
    pub sub_phantom_param_id: i32,
    pub activate_distance: i16,
    pub deactivate_distance: i16,
    pub pad2: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcThinkParam {
    pub logic_id: i32,
    pub battle_goal_id: i32,
    pub near_dist: f32,
    pub mid_dist: f32,
    pub far_dist: f32,
    pub out_dist: f32,
    pub back_home_life_on_hit_ene_wal: f32,
    pub goal_id_to_caution: f32,
    pub id_attack_cannot_move: i32,
    pub goal_id_to_find: f32,
    pub call_help_action_anim_id: i32,
    pub call_help_call_action_id: i32,
    pub eye_dist: i16,
    pub ear_dist: i16,
    pub ear_soundcut_dist: i16,
    pub nose_dist: i16,
    pub max_backhome_dist: i16,
    pub backhome_dist: i16,
    pub backhome_battle_dist: i16,
    pub non_battle_act_life: i16,
    pub back_home_look_target_time: i16,
    pub back_home_look_target_dist: i16,
    pub sight_target_forget_time: i16,
    pub sound_target_forget_time: i16,
    pub battle_start_dist: i16,
    pub call_help_my_peer_id: i16,
    pub call_help_call_peer_id: i16,
    pub target_sys_dmg_effect_rate: i16,
    pub team_attack_effectivity: u8,
    pub eye_ang_x: u8,
    pub eye_ang_y: u8,
    pub state0: u8,
    pub state1: u8,
    pub call_help_call_valid_min_dist_target: u8,
    pub call_help_call_valid_range: u8,
    pub call_help_forget_time_by_arrival: u8,
    pub call_help_min_wait_time: u8,
    pub call_help_max_wait_time: u8,
    pub goal_action_to_caution: u8,
    pub goal_action_to_find: u8,
    pub call_help_reply_behavior_type: u8,
    pub disable_path_move: u8,
    pub skip_arrival_visible_check: u8,
    pub think_attr_do_admirer: u8,
    #[bitflag(enableNaviFlg_Edge, 0)]
    #[bitflag(enableNaviFlg_LargeSpace, 1)]
    #[bitflag(enableNaviFlg_Ladder, 2)]
    #[bitflag(enableNaviFlg_Hole, 3)]
    #[bitflag(enableNaviFlg_Door, 4)]
    #[bitflag(enableNaviFlg_InSideWall, 5)]
    #[bitflag(enableNaviFlg_EdgeOrdinary, 6)]
    #[bitflag(enableNaviFlg_reserve0, 7)]
    pub bitfield0: u8,
    pub enable_navi_flag_reserve: [u8; 3],
    pub eye_dist_for_dark: i16,
    pub battle_start_dist_for_dark: i16,
    pub eye_dist_for_pitch_dark: i16,
    pub battle_start_dist_for_pitch_dark: i16,
    pub platoon_reply_time: f32,
    pub platoon_reply_add_random_time: f32,
    pub eye_back_offset_dist: i16,
    pub eye_begin_dist: i16,
    pub target_arrive_dist: f32,
    pub point_arrive_dist: f32,
    pub change_state_action_to_find: u8,
    pub change_state_action_to_caution: u8,
    pub change_state_action_to_battle: u8,
    pub goal_action_to_disappear: u8,
    pub disable_local_steering: u8,
    pub act_type_on_failed_path: u8,
    pub interest_category: u8,
    pub goal_action_to_interest: u8,
    pub unk1: i16,
    pub ear_ang_x: i16,
    pub ear_ang_y: i16,
    pub change_state_action_to_interest: u8,
    pub change_state_action_to_normal: u8,
    pub unk2: f32,
    pub unk3: f32,
    pub unk4: i16,
    pub unk5: u8,
    pub unk6: u8,
    pub unk7: f32,
    pub pad: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ObjActParam {
    pub action_enable_msg_id: i32,
    pub action_failed_msg_id: i32,
    pub sp_qualified_pass_event_flag: i32,
    pub player_anim_id: i32,
    pub chr_anim_id: i32,
    pub valid_dist: i16,
    pub sp_qualified_id: i16,
    pub sp_qualified_id2: i16,
    pub obj_dummy_id: u8,
    pub pad1: [u8; 1],
    pub obj_anim_id: i32,
    pub valid_player_angle: u8,
    pub sp_qualified_type: u8,
    pub sp_qualified_type2: u8,
    pub valid_obj_angle: u8,
    pub chr_sorb_type: u8,
    pub event_kick_timing: u8,
    pub pad2: [u8; 2],
    pub action_button_param_id: i32,
    pub action_success_msg_id: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ObjectMaterialSfxParam {
    pub mtrl_vfx_id0: i32,
    pub mtrl_vfx_id1: i32,
    pub mtrl_vfx_id2: i32,
    pub mtrl_vfx_id3: i32,
    pub mtrl_vfx_id4: i32,
    pub mtrl_vfx_id5: i32,
    pub mtrl_vfx_id6: i32,
    pub mtrl_vfx_id7: i32,
    pub mtrl_vfx_id8: i32,
    pub mtrl_vfx_id9: i32,
    pub mtrl_vfx_id10: i32,
    pub mtrl_vfx_id11: i32,
    pub mtrl_vfx_id12: i32,
    pub mtrl_vfx_id13: i32,
    pub mtrl_vfx_id14: i32,
    pub mtrl_vfx_id15: i32,
    pub mtrl_vfx_id16: i32,
    pub mtrl_vfx_id17: i32,
    pub mtrl_vfx_id18: i32,
    pub mtrl_vfx_id19: i32,
    pub mtrl_vfx_id20: i32,
    pub mtrl_vfx_id21: i32,
    pub mtrl_vfx_id22: i32,
    pub mtrl_vfx_id23: i32,
    pub mtrl_vfx_id24: i32,
    pub mtrl_vfx_id25: i32,
    pub mtrl_vfx_id26: i32,
    pub mtrl_vfx_id27: i32,
    pub mtrl_vfx_id28: i32,
    pub mtrl_vfx_id29: i32,
    pub mtrl_vfx_id30: i32,
    pub mtrl_vfx_id31: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ObjectParam {
    pub h_p: i16,
    pub defense: u16,
    pub ext_ref_tex_id: i16,
    pub material_id: i16,
    pub anim_break_id_max: u8,
    #[bitflag(isCamHit, 0)]
    #[bitflag(isBreakByPlayerCollide, 1)]
    #[bitflag(isAnimBreak, 2)]
    #[bitflag(isPenetrationBulletHit, 3)]
    #[bitflag(isChrHit, 4)]
    #[bitflag(isAttackBacklash, 5)]
    #[bitflag(isDisableBreakForFirstAppear, 6)]
    #[bitflag(isLadder, 7)]
    pub bitfield0: u8,
    #[bitflag(isAnimPauseOnRemoPlay, 0)]
    #[bitflag(isDamageNoHit, 1)]
    #[bitflag(isMoveObj, 2)]
    #[bitflag(UnkBool1, 3)]
    #[bitflag(UnkBool2, 4)]
    #[bitflag(UnkBool3, 5)]
    #[bitflag(mapRelated, 6)]
    #[bitflag(IsBreakByCollide2, 7)]
    pub bitfield1: u8,
    pub default_lod_param_id: i8,
    pub break_sfx_id: i32,
    pub beh_param_id0: i32,
    pub beh_param_id1: i32,
    pub beh_param_id2: i32,
    pub unk2: u8,
    pub havok_system_wind: u8,
    pub havok_system_break_obj: u8,
    pub unk5: u8,
    pub wind_effect_rate: f32,
    pub unk7: f32,
    pub break_obj_rate: f32,
    pub burn_life_time: f32,
    pub break_update: f32,
    pub burn_vfx_id0: i32,
    pub burn_vfx_id1: i32,
    pub burn_vfx_id2: i32,
    pub burn_vfx_id3: i32,
    pub burn_behavior_id0: i32,
    pub burn_behavior_id1: i32,
    pub burn_behavior_id2: i32,
    pub burn_behavior_id3: i32,
    pub burn_interval: u16,
    pub unk20: u8,
    pub unk22: u8,
    pub burn_behavior_time: f32,
    pub burn_time_begin0: f32,
    pub burn_time_begin1: f32,
    pub burn_time_begin2: f32,
    pub burn_time_begin3: f32,
    pub burn_time_end0: f32,
    pub burn_time_end1: f32,
    pub burn_time_end2: f32,
    pub burn_time_end3: f32,
    pub ai_sound_param_id: i32,
    pub unk32: f32,
    pub unk33: f32,
    pub unk34: f32,
    pub unk35: f32,
    pub unk36: f32,
    pub unk37: f32,
    pub unk38: f32,
    pub unk39: f32,
    pub unk40: f32,
    pub unk41: i32,
    pub unk42: i16,
    pub spawn_param: i16,
    pub auto_destroy_timer: f32,
    pub unk44: f32,
    pub sound_id: i32,
    pub object_material_sfx_index: i32,
    pub pad1: [u8; 68],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PhantomParam {
    pub alpha1: f32,
    pub alpha2: f32,
    pub alpha3: f32,
    pub alpha4: f32,
    pub alpha5: f32,
    pub r1: u8,
    pub g1: u8,
    pub b1: u8,
    pub r2: u8,
    pub g2: u8,
    pub b2: u8,
    pub r3: u8,
    pub g3: u8,
    pub b3: u8,
    pub r4: u8,
    pub g4: u8,
    pub b4: u8,
    pub r5: u8,
    pub g5: u8,
    pub b5: u8,
    pub unk1: u8,
    pub ghost_alpha1: f32,
    pub ghost_alpha2: f32,
    pub ghost_type: u8,
    pub pad1: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PlayRegionParam {
    pub play_region_sp_id: i32,
    pub event_flag_id0: i32,
    pub limitation_time: f32,
    pub event_flag_id1: i32,
    pub event_flag_id2: i32,
    pub disolved_event_flag: i16,
    pub load_of_cinder: u8,
    #[bitflag(IsEnableEvent, 0)]
    #[bitflag(Unk1, 1)]
    #[bitflag(Unk2, 2)]
    #[bitflag(Unk3, 3)]
    #[bitflag(Unk4, 4)]
    #[bitflag(Unk5, 5)]
    #[bitflag(Unk6, 6)]
    #[bitflag(Unk7, 7)]
    pub bitfield0: u8,
    pub bonfire_event_id0: i32,
    pub bonfire_event_id1: i32,
    pub bonfire_event_id2: i32,
    pub bonfire_event_id3: i32,
    pub bonfire_event_id4: i32,
    pub bonfire_event_id5: i32,
    pub bonfire_event_id6: i32,
    pub bonfire_event_id7: i32,
    pub bonfire_event_id8: i32,
    pub bonfire_event_id9: i32,
    #[bitflag(Unk8, 0)]
    #[bitflag(Unk9, 1)]
    #[bitflag(Unk10, 2)]
    #[bitflag(Unk11, 3)]
    #[bitflag(Unk12, 4)]
    #[bitflag(Unk13, 5)]
    #[bitflag(Unk14, 6)]
    #[bitflag(Unk15, 7)]
    pub bitfield1: u8,
    pub pad1: [u8; 31],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ProtectorGenParam {
    pub pro_param_id: i32,
    pub gem_slot_type_0: u32,
    pub gem_gen_id_0: i32,
    pub gem_slot_type_1: u32,
    pub gem_gen_id_1: i32,
    pub gem_slot_type_2: u32,
    pub gem_gen_id_2: i32,
    pub gem_slot_type_3: u32,
    pub gem_gen_id_3: i32,
    pub gem_slot_type_4: u32,
    pub gem_gen_id_4: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RagdollParam {
    pub hierarch_gain: f32,
    pub velocity_damping: f32,
    pub accel_gain: f32,
    pub velocity_gain: f32,
    pub position_gain: f32,
    pub max_liner_velocity: f32,
    pub max_angular_velocity: f32,
    pub snap_gain: f32,
    pub enable: u8,
    pub parts_hit_mask_no: i8,
    pub pad1: [u8; 14],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ReinforceParamProtector {
    pub physic_def_rate: f32,
    pub magic_def_rate: f32,
    pub fire_def_rate: f32,
    pub thunder_def_rate: f32,
    pub slash_def_rate: f32,
    pub blow_def_rate: f32,
    pub thrust_def_rate: f32,
    pub resist_poison_rate: f32,
    pub resist_toxic_rate: f32,
    pub resist_blood_rate: f32,
    pub resist_curse_rate: f32,
    pub resident_sp_effect_id1: u8,
    pub resident_sp_effect_id2: u8,
    pub resident_sp_effect_id3: u8,
    pub material_set_id: u8,
    pub dark_def_rate: f32,
    pub resist_frost: f32,
    pub pad1: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ReinforceParamWeapon {
    pub physics_atk_rate: f32,
    pub magic_atk_rate: f32,
    pub fire_atk_rate: f32,
    pub thunder_atk_rate: f32,
    pub stamina_atk_rate: f32,
    pub sa_weapon_atk_rate: f32,
    pub sa_durability_rate: f32,
    pub correct_strength_rate: f32,
    pub correct_agility_rate: f32,
    pub correct_magic_rate: f32,
    pub correct_faith_rate: f32,
    pub physics_guard_cut_rate: f32,
    pub magic_guard_cut_rate: f32,
    pub fire_guard_cut_rate: f32,
    pub thunder_guard_cut_rate: f32,
    pub poison_guard_resist_rate: f32,
    pub toxic_guard_resist_rate: f32,
    pub bleed_guard_resist_rate: f32,
    pub curse_guard_resist_rate: f32,
    pub stamina_guard_resist_rate: f32,
    pub sp_effect_id1: u8,
    pub sp_effect_id2: u8,
    pub sp_effect_id3: u8,
    pub resident_sp_effect_id1: u8,
    pub resident_sp_effect_id2: u8,
    pub resident_sp_effect_id3: u8,
    pub material_set_id: u8,
    pub pad1: [u8; 1],
    pub dark_atk_rate: f32,
    pub dark_cut_rate: f32,
    pub stability_atk_rate: f32,
    pub stability_cut_rate: f32,
    pub frost_guard_resist_rate: f32,
    pub unk1: f32,
    pub pad2: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RoleParam {
    pub team_type: u8,
    pub pad1: [u8; 3],
    pub phantom_param_id0: i32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub sp_effect_id5: i32,
    pub sp_effect_id6: i32,
    pub sp_effect_id7: i32,
    pub sp_effect_id8: i32,
    pub sp_effect_id9: i32,
    pub sfx_id0: i32,
    pub sfx_id1: i32,
    pub stay_anim_id: i32,
    pub item_lot_id: i32,
    pub sp_effect_condition: u8,
    pub is_display_team_name: u8,
    pub pad2: [u8; 2],
    pub text_id: i32,
    pub sub_team_type: i32,
    pub phantom_param_id1: i32,
    pub phantom_param_id2: i32,
    pub phantom_param_id3: i32,
    pub sp_effect10: i32,
    pub sp_effect11: i32,
    pub sp_effect12: i32,
    pub sp_effect13: i32,
    pub phantom_param_id_for_debug: i32,
    pub pad3: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SeMaterialConvertParam {
    pub material_id: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ShopLineupParam {
    pub equip_id: i32,
    pub value: i32,
    pub mtrl_id: i32,
    pub event_flag: i32,
    pub qwc_id: i32,
    pub sell_quantity: i16,
    pub shop_type: u8,
    pub equip_type: u8,
    pub value_san: i16,
    pub pad1: [u8; 6],
    pub price_rate: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SkeletonParam {
    pub neck_turn_gain: f32,
    pub original_ground_height_ms: i16,
    pub min_ankle_height_ms: i16,
    pub max_ankle_height_ms: i16,
    pub cosine_max_knee_angle: i16,
    pub cosine_min_knee_angle: i16,
    pub foot_planted_ankle_height_ms: i16,
    pub foot_raised_ankle_height_ms: i16,
    pub raycast_distance_up: i16,
    pub raycast_distance_down: i16,
    pub foot_end_ls_x: i16,
    pub foot_end_ls_y: i16,
    pub foot_end_ls_z: i16,
    pub on_off_gain: i16,
    pub ground_acsending_gain: i16,
    pub ground_descending_gain: i16,
    pub foot_raised_gain: i16,
    pub foot_planted_gain: i16,
    pub foot_unlock_gain: i16,
    pub knee_axis_type: u8,
    pub use_foot_locking: u8,
    pub foot_placement_on: u8,
    pub twist_knee_axis_type: u8,
    pub neck_turn_priority: u8,
    pub neck_turn_max_angle: u8,
    pub pad1: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SpEffectParam {
    pub icon_id: i32,
    pub condition_hp: f32,
    pub effect_endurance: f32,
    pub motion_interval: f32,
    pub max_hp_rate: f32,
    pub max_mp_rate: f32,
    pub max_stamina_cut_rate: f32,
    pub slash_damage_cut_rate: f32,
    pub blow_damage_cut_rate: f32,
    pub thrust_damage_cut_rate: f32,
    pub neutral_damage_cut_rate: f32,
    pub magic_damage_cut_rate: f32,
    pub fire_damage_cut_rate: f32,
    pub thunder_damage_cut_rate: f32,
    pub phys_atk_rate: f32,
    pub magic_atk_rate: f32,
    pub fire_atk_rate: f32,
    pub thunder_atk_rate: f32,
    pub phys_atk_power_rate: f32,
    pub magic_atk_power_rate: f32,
    pub fire_atk_power_rate: f32,
    pub thunder_atk_power_rate: f32,
    pub phys_atk_power: i32,
    pub magic_atk_power: i32,
    pub fire_atk_power: i32,
    pub thunder_atk_power: i32,
    pub phys_def_rate: f32,
    pub magic_def_rate: f32,
    pub fire_def_rate: f32,
    pub thunder_def_rate: f32,
    pub phys_def: i32,
    pub magic_def: i32,
    pub fire_def: i32,
    pub thunder_def: i32,
    pub no_guard_damage_rate: f32,
    pub vital_spot_change_rate: f32,
    pub normal_spot_change_rate: f32,
    pub max_hp_change_rate: f32,
    pub behavior_id: i32,
    pub change_hp_rate: f32,
    pub change_hp_point: i32,
    pub change_mp_rate: f32,
    pub change_mp_point: i32,
    pub mp_recover_change_speed: i32,
    pub change_stamina_rate: f32,
    pub change_stamina_point: i32,
    pub stamina_recover_change_speed: i32,
    pub magic_effect_time_change: f32,
    pub inside_durability: i32,
    pub max_durability: i32,
    pub stamina_attack_rate: f32,
    pub regist_poison: i32,
    pub regist_toxic: i32,
    pub regist_blood: i32,
    pub regist_curse: i32,
    pub fall_damage_rate: f32,
    pub soul_rate: f32,
    pub equip_weight_change_rate: f32,
    pub all_item_weight_change_rate: f32,
    pub soul: i32,
    pub anim_id_offset: i32,
    pub have_soul_rate: f32,
    pub target_priority: f32,
    pub sight_search_enemy_cut: i32,
    pub hearing_search_enemy_cut: f32,
    pub gravity_rate: f32,
    pub regist_poison_change_rate: f32,
    pub regist_toxic_change_rate: f32,
    pub regist_blood_change_rate: f32,
    pub regist_curse_change_rate: f32,
    pub soul_steal_rate: f32,
    pub life_reduction_rate: f32,
    pub hp_recover_rate: f32,
    pub replace_sp_effect_id: i32,
    pub cycle_occurence_sp_effect_id: i32,
    pub atk_occurence_sp_effect_id: i32,
    pub guard_def_flick_power_rate: f32,
    pub guard_stamina_cut_rate: f32,
    pub ray_cast_passed_time: i16,
    pub change_super_armor_point: i16,
    pub bow_dist_rate: i16,
    pub sp_category: i16,
    pub category_priority: i8,
    pub save_category: i8,
    pub change_magic_slot: u8,
    pub change_miracle_slot: u8,
    pub hero_point_damage: u8,
    pub def_flick_power: u8,
    pub flick_damage_cut_rate: u8,
    pub blood_damage_rate: u8,
    pub dmg_lv_none: u8,
    pub dmg_lv_s: u8,
    pub dmg_lv_m: u8,
    pub dmg_lv_l: u8,
    pub dmg_lv_blow_m: u8,
    pub dmg_lv_push: u8,
    pub dmg_lv_strike: u8,
    pub dmg_lv_blow_s: u8,
    pub dmg_lv_min: u8,
    pub dmg_lv_uppercut: u8,
    pub dmg_lv_blow_ll: u8,
    pub dmg_lv_breath: u8,
    pub atk_attribute: u8,
    pub sp_attribute: u8,
    pub state_info: i16,
    pub wep_param_change: u8,
    pub move_type: u8,
    pub life_reduction_type: i16,
    pub throw_condition: u8,
    pub add_behavior_judge_id_condition: i8,
    pub add_behavior_judge_id_add: i8,
    #[bitflag(effectTargetSelf, 0)]
    #[bitflag(effectTargetFriend, 1)]
    #[bitflag(effectTargetEnemy, 2)]
    #[bitflag(effectTargetPlayer, 3)]
    #[bitflag(effectTargetAI, 4)]
    #[bitflag(effectTargetLive, 5)]
    #[bitflag(effectTargetGhost, 6)]
    #[bitflag(effectTargetWhiteGhost, 7)]
    pub bitfield0: u8,
    #[bitflag(effectTargetBlackGhost, 0)]
    #[bitflag(effectTargetAttacker, 1)]
    #[bitflag(dispIconNonactive, 2)]
    #[bitflag(useSpEffectEffect, 3)]
    #[bitflag(bAdjustMagicAbility, 4)]
    #[bitflag(bAdjustFaithAbility, 5)]
    #[bitflag(bGameClearBonus, 6)]
    #[bitflag(magParamChange, 7)]
    pub bitfield1: u8,
    #[bitflag(miracleParamChange, 0)]
    #[bitflag(clearSoul, 1)]
    #[bitflag(requestSos, 2)]
    #[bitflag(requestBlackSos, 3)]
    #[bitflag(requestForceJoinBlackSos, 4)]
    #[bitflag(requestKickSession, 5)]
    #[bitflag(requestLeaveSession, 6)]
    #[bitflag(requestNpcInvade, 7)]
    pub bitfield2: u8,
    #[bitflag(noDead, 0)]
    #[bitflag(bCurrHPIndependeMaxHP, 1)]
    #[bitflag(corrosionIgnore, 2)]
    #[bitflag(sightSearchCutIgnore, 3)]
    #[bitflag(hearingSearchCutIgnore, 4)]
    #[bitflag(antiMagicIgnore, 5)]
    #[bitflag(fakeTargetIgnore, 6)]
    #[bitflag(fakeTargetIgnoreUndead, 7)]
    pub bitfield3: u8,
    #[bitflag(fakeTargetIgnoreAnimal, 0)]
    #[bitflag(gravityIgnore, 1)]
    #[bitflag(disablePoison, 2)]
    #[bitflag(disableToxic, 3)]
    #[bitflag(disableBlood, 4)]
    #[bitflag(disableCurse, 5)]
    #[bitflag(enableCharm, 6)]
    #[bitflag(enableLifeTime, 7)]
    pub bitfield4: u8,
    #[bitflag(hasTarget, 0)]
    #[bitflag(isFireDamageCancel, 1)]
    #[bitflag(isExtendSpEffectLife, 2)]
    #[bitflag(requestLeaveColiseumSession, 3)]
    #[bitflag(disableFrost, 4)]
    #[bitflag(chargeAttackParamChange, 5)]
    #[bitflag(throwAttackParamChange, 6)]
    #[bitflag(enableEquipSlotCheck, 7)]
    pub bitfield5: u8,
    #[bitflag(vowType0, 0)]
    #[bitflag(vowType1, 1)]
    #[bitflag(vowType2, 2)]
    #[bitflag(vowType3, 3)]
    #[bitflag(vowType4, 4)]
    #[bitflag(vowType5, 5)]
    #[bitflag(vowType6, 6)]
    #[bitflag(vowType7, 7)]
    pub bitfield6: u8,
    #[bitflag(vowType8, 0)]
    #[bitflag(vowType9, 1)]
    #[bitflag(vowType10, 2)]
    #[bitflag(vowType11, 3)]
    #[bitflag(vowType12, 4)]
    #[bitflag(vowType13, 5)]
    #[bitflag(vowType14, 6)]
    #[bitflag(vowType15, 7)]
    pub bitfield7: u8,
    pub damage_change_state: u8,
    pub unk1: f32,
    #[bitflag(effectTargetOpposeTarget, 0)]
    #[bitflag(effectTargetFriendlyTarget, 1)]
    #[bitflag(effectTargetSelfTarget, 2)]
    #[bitflag(Unk2, 3)]
    #[bitflag(Unk3, 4)]
    #[bitflag(Unk4, 5)]
    #[bitflag(Unk5, 6)]
    #[bitflag(Unk6, 7)]
    pub bitfield8: u8,
    pub unk7: i8,
    pub unk8: i16,
    pub effect_vfx0: i32,
    pub state_sp_effect0: i32,
    pub state_sp_effect1: i32,
    pub state_sp_effect2: i32,
    pub state_sp_effect3: i32,
    pub stability_val: i32,
    pub unk9: i32,
    pub unk10: i16,
    pub unk11: i16,
    pub effect_vfx1: i32,
    pub effect_vfx2: i32,
    pub effect_vfx3: i32,
    pub effect_vfx4: i32,
    pub effect_vfx5: i32,
    pub effect_vfx6: i32,
    pub effect_vfx7: i32,
    pub regist_frost: i32,
    pub unk12: i32,
    pub unk13: i16,
    pub unk14: u8,
    pub unk15: u8,
    pub poise_rate: f32,
    pub phys_rate: f32,
    pub magic_rate: f32,
    pub fire_rate: f32,
    pub thunder_rate: f32,
    pub dark_rate: f32,
    pub stamina_rate: f32,
    pub dark_damage_cut_rate: f32,
    pub dark_def_rate: f32,
    pub unk16: f32,
    pub unk17: f32,
    pub dark_attack_power_rate: f32,
    pub dark_atk_power: i32,
    pub unk18: f32,
    pub unk19: i32,
    pub condition_max_hp: f32,
    pub unk20: f32,
    pub drop_rate: f32,
    pub unk21: f32,
    pub poison_resist_change: f32,
    pub toxic_resist_change: f32,
    pub bleed_resist_change: f32,
    pub curse_resist_change: f32,
    pub frost_resist_change: f32,
    pub unk_damage_rate0: f32,
    pub unk_damage_rate1: f32,
    pub unk_damage_rate2: f32,
    pub unk_damage_rate3: f32,
    pub poison_atk_rate: f32,
    pub toxic_atk_rate: f32,
    pub bleed_atk_rate: f32,
    pub toxic_atk_rate_0: f32,
    pub unk22: f32,
    pub slash_sp_attack_rate: f32,
    pub blow_sp_attack_rate: f32,
    pub thrust_sp_attack_rate: f32,
    pub phys_sp_attack_rate: f32,
    pub magic_sp_attack_rate: f32,
    pub fire_sp_attack_rate: f32,
    pub thunder_sp_attack_rate: f32,
    pub dark_sp_attack_rate: f32,
    pub player_base_val0: u8,
    pub player_base_val1: u8,
    pub player_base_val2: u8,
    pub player_base_val3: u8,
    pub unk23: u8,
    #[bitflag(Unk24, 0)]
    #[bitflag(useSpValCorrection, 1)]
    #[bitflag(useDifferentVal, 2)]
    #[bitflag(instaDeath, 3)]
    #[bitflag(Unk25, 4)]
    #[bitflag(Unk26, 5)]
    #[bitflag(Unk27, 6)]
    #[bitflag(DisableMultiPlayUse, 7)]
    pub bitfield9: u8,
    pub unk28: u8,
    pub unk29: u8,
    pub unk30: f32,
    pub phys_def_cut_rate_mp: f32,
    pub magic_def_cut_rate_mp: f32,
    pub fire_def_cut_rate_mp: f32,
    pub thunder_def_cut_rate_mp: f32,
    pub dark_def_cut_rate_mp: f32,
    pub phys_def_cut_rate2: f32,
    pub magic_def_cut_rate2: f32,
    pub fire_def_cut_rate2: f32,
    pub thunder_def_cut_rate2: f32,
    pub dark_def_cut_rate2: f32,
    pub unk36: f32,
    pub phys_unk_rate: f32,
    pub magic_unk_rate: f32,
    pub fire_unk_rate: f32,
    pub thunder_unk_rate: f32,
    pub dark_unk_rate: f32,
    pub phys_damage_rate2: f32,
    pub magic_damage_rate2: f32,
    pub fire_damage_rate2: f32,
    pub thunder_damage_rate2: f32,
    pub dark_damage_rate2: f32,
    pub regist_frost_change_rate: f32,
    pub condition_hp_change0: i16,
    pub condition_hp_change1: i16,
    pub condition_hp_change2: i16,
    pub unk37: u8,
    pub fake_dexterity_cast_speed: u8,
    pub unk38: f32,
    pub sword_art_mp_change_rate: f32,
    pub magic_mp_change_rate: f32,
    pub pyro_mp_change_rate: f32,
    pub miracle_mp_change_rate: f32,
    pub sub_change_hp_rate: f32,
    pub sub_hp_point: i32,
    pub sub_change_mp_rate: f32,
    pub sub_mp_point: i32,
    pub sub_hp_restore_rate: f32,
    pub sub_mp_restore_rate: f32,
    pub death_occurence_sp_effect_id: i32,
    pub effect_endurance_rate: f32,
    pub unk39: f32,
    pub unk40: u8,
    pub unk41: u8,
    pub sub_sp_category: i16,
    pub unk42: f32,
    pub vigor: i8,
    pub attunement: i8,
    pub endurance: i8,
    pub vitality: i8,
    pub strength: i8,
    pub dexterity: i8,
    pub intelligence: i8,
    pub faith: i8,
    pub luck: i8,
    pub human_point: i8,
    pub pad: [u8; 14],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SpEffectVfxParam {
    pub midst_sfx_id: i32,
    pub midst_se_id: i32,
    pub init_sfx_id: i32,
    pub init_se_id: i32,
    pub finish_sfx_id: i32,
    pub finish_se_id: i32,
    pub camouflage_begin_dist: f32,
    pub camouflage_end_dist: f32,
    pub transform_protector_id: i32,
    pub midst_dmy_id: i16,
    pub init_dmy_id: i16,
    pub finish_dmy_id: i16,
    pub effect_type: u8,
    pub soul_param_id_for_wep_enchant1: u8,
    pub play_category: u8,
    pub play_priority: u8,
    #[bitflag(existEffectForLarge, 0)]
    #[bitflag(existEffectForSoul, 1)]
    #[bitflag(existInvisibleAtCamouflage, 2)]
    #[bitflag(useCamouflage, 3)]
    #[bitflag(invisibleAtFriendCamouflage, 4)]
    #[bitflag(addMapAreaBlockOffset, 5)]
    #[bitflag(halfCamouflage, 6)]
    #[bitflag(isFullBodyProtectorId, 7)]
    pub bitfield0: u8,
    #[bitflag(isInvisibleWeapon, 0)]
    #[bitflag(isSilence, 1)]
    #[bitflag(isGauntletProtectorId, 2)]
    #[bitflag(Unk1, 3)]
    #[bitflag(Unk2, 4)]
    #[bitflag(Unk3, 5)]
    #[bitflag(Unk4, 6)]
    #[bitflag(Unk5, 7)]
    pub bitfield1: u8,
    pub decal_id0: i32,
    pub decal_id1: i32,
    pub soul_param_id_for_wep_enchant2: u8,
    pub sp_effect_sp0: u8,
    pub sp_effect_sp1: u8,
    pub body_protector_type: u8,
    pub sp_sfx_id0: i32,
    pub sp_sfx_id1: i32,
    pub sp_sfx_id2: i32,
    pub sp_sfx_id3: i32,
    pub sp_sfx_id4: i32,
    pub sp_sfx_id5: i32,
    pub sp_sfx_id6: i32,
    pub sp_sfx_id7: i32,
    pub sp_sfx_id8: i32,
    pub sp_sfx_id9: i32,
    pub sp_sfx_id10: i32,
    pub sp_sfx_id11: i32,
    pub sp_sfx_id12: i32,
    pub sp_sfx_id13: i32,
    pub sp_sfx_id14: i32,
    pub sp_sfx_id15: i32,
    pub unk10: u8,
    pub phantom_type: u8,
    pub camouflage_ghost: u8,
    pub unk12: u8,
    pub phantom_param_id: i32,
    pub emissive_intensity_scale: f32,
    pub unk13: f32,
    pub body_protector_val: i16,
    pub unk14: i16,
    pub cinder_intensity_scale: f32,
    pub pad1: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SwordArtsParam {
    pub action_id: u8,
    pub action_correction: u8,
    pub reserve_art_point_type: u8,
    pub unused_field: u8,
    pub reserve_arts_point0: i8,
    pub reserve_arts_point1: i8,
    pub reserve_arts_point2: i8,
    pub reserve_arts_point3: i8,
    pub debug_text_id: i32,
    pub sub_fpcost: i16,
    pub f_pcost: i16,
    pub f_pcost_light: i16,
    pub fp_cost_strong: i16,
    pub shield_category: u8,
    pub pad1: [u8; 11],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct TalkParam {
    pub pc_gender_female1: i32,
    pub pc_gender_male1: i32,
    pub sp_effect_id0: i32,
    pub animation_id0: i32,
    pub sp_effect_id1: i32,
    pub animation_id1: i32,
    pub sp_effect_id2: i32,
    pub animation_id2: i32,
    pub event_flag_id: i32,
    pub event_id_female: i32,
    pub event_id_male: i32,
    pub talk_time: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ThrowDirectionSfxParam {
    pub sfx_id1: i32,
    pub sfx_id2: i32,
    pub sfx_id3: i32,
    pub sfx_id4: i32,
    pub sfx_id5: i32,
    pub sfx_id6: i32,
    pub sfx_id7: i32,
    pub sfx_id8: i32,
    pub sfx_id9: i32,
    pub sfx_id10: i32,
    pub sfx_id11: i32,
    pub sfx_id12: i32,
    pub sfx_id13: i32,
    pub sfx_id14: i32,
    pub sfx_id15: i32,
    pub sfx_id16: i32,
    pub sfx_id17: i32,
    pub sfx_id18: i32,
    pub sfx_id19: i32,
    pub sfx_id20: i32,
    pub sfx_id21: i32,
    pub sfx_id22: i32,
    pub sfx_id23: i32,
    pub sfx_id24: i32,
    pub sfx_id25: i32,
    pub sfx_id26: i32,
    pub sfx_id27: i32,
    pub sfx_id28: i32,
    pub sfx_id29: i32,
    pub sfx_id30: i32,
    pub pad1: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ThrowParam {
    pub atk_chr_id: i32,
    pub def_chr_id: i32,
    pub dist: f32,
    pub diff_ang_min: f32,
    pub diff_ang_max: f32,
    pub upper_yrange: f32,
    pub lower_yrange: f32,
    pub diff_ang_my_to_def: f32,
    pub throw_type_id: i32,
    pub atk_animid: i32,
    pub def_anim_id: i32,
    pub esc_hp: i16,
    pub self_esc_cycle_time: i16,
    pub sphere_cast_radius_rate_top: i16,
    pub sphere_cast_radius_rate_low: i16,
    pub pad_type: u8,
    pub atk_enable_state: u8,
    pub atk_sorb_dmy_id: u8,
    pub def_sorb_dmy_id: u8,
    pub throw_type: u8,
    pub self_esc_cycle_int: u8,
    pub dmy_has_chr_dir_type: u8,
    #[bitflag(isTurnAtker, 0)]
    #[bitflag(isSkipWepCate, 1)]
    #[bitflag(isSkipSphereCast, 2)]
    #[bitflag(Unk1, 3)]
    #[bitflag(Unk2, 4)]
    #[bitflag(Unk3, 5)]
    #[bitflag(Unk4, 6)]
    #[bitflag(Unk5, 7)]
    pub bitfield0: u8,
    pub sub_atk_sorb_dmy_id: i16,
    pub sub_def_sorb_dmy_id: i16,
    pub dist2: f32,
    pub diff_ang_min2: f32,
    pub diff_ang_max2: f32,
    pub upper_yrange2: f32,
    pub lower_yrange2: f32,
    pub diff_ang_my_to_def2: f32,
    pub perform_dmy_id0: i32,
    pub perform_dmy_id1: i32,
    pub pad1: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ToughnessParam {
    pub toughness: f32,
    pub damage_lvl_threshold: i16,
    pub is_toughness_effective: u8,
    pub pad1: [u8; 1],
    pub sp_effect_id: i32,
    pub pad2: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct UpperArmParam {
    pub arm_z0: f32,
    pub arm_xy0: f32,
    pub arm_z1: f32,
    pub arm_xy1: f32,
    pub arm_z2: f32,
    pub arm_xy2: f32,
    pub arm_z3: f32,
    pub arm_xy3: f32,
    pub arm_z4: f32,
    pub arm_xy4: f32,
    pub arm_z5: f32,
    pub arm_xy5: f32,
    pub arm_z6: f32,
    pub arm_xy6: f32,
    pub arm_z7: f32,
    pub arm_xy7: f32,
    pub arm_z8: f32,
    pub arm_xy8: f32,
    pub arm_z9: f32,
    pub arm_xy9: f32,
    pub pad1: [u8; 48],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WeaponGenParam {
    pub wep_param_id: i32,
    pub gem_slot_type_0: i32,
    pub gem_gen_id0: i32,
    pub gem_slot_type_1: i32,
    pub gem_gen_id1: i32,
    pub gem_slot_type_2: i32,
    pub gem_gen_id2: i32,
    pub gem_slot_type_3: i32,
    pub gem_gen_id3: i32,
    pub gem_slot_type_4: i32,
    pub gem_gen_id4: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WepAbsorpPosParam {
    pub shealth_time: u8,
    pub pad1: [u8; 3],
    pub one_hand_damipoly_id0: u16,
    pub one_hand_damipoly_id1: u16,
    pub both_hand_damipoly_id0: u16,
    pub shealth_damipoly_id0: u16,
    pub shealth_damipoly_id1: u16,
    pub one_hand_damipoly_id2: u16,
    pub one_hand_damipoly_id3: u16,
    pub both_hand_damipoly_id1: u16,
    pub shealth_damipoly_id2: u16,
    pub shealth_damipoly_id3: u16,
    pub one_hand_damipoly_id4: u16,
    pub one_hand_damipoly_id5: u16,
    pub both_hand_damipoly_id2: u16,
    pub shealth_damipoly_id4: u16,
    pub shealth_damipoly_id5: u16,
    pub one_hand_damipoly_id6: u16,
    pub one_hand_damipoly_id7: u16,
    pub both_hand_damipoly_id3: u16,
    pub shealth_damipoly_id6: u16,
    pub shealth_damipoly_id7: u16,
    pub unk22: u8,
    pub unk23: u8,
    pub unk24: u8,
    pub unk25: u8,
    pub both_hand_damipoly_id4: i16,
    pub both_hand_damipoly_id5: i16,
    pub both_hand_damipoly_id6: i16,
    pub both_hand_damipoly_id7: i16,
    pub unk30: u8,
    pub unk31: u8,
    pub unk32: u8,
    pub unk33: u8,
    pub unk34: u8,
    pub unk35: u8,
    pub unk36: u8,
    pub unk37: u8,
    pub unk38: u8,
    pub unk39: u8,
    pub unk40: u8,
    pub unk41: u8,
    pub unk42: u8,
    pub unk43: u8,
    pub unk44: u8,
    pub unk45: u8,
    pub unk46: u8,
    pub unk47: u8,
    pub unk48: u8,
    pub unk49: u8,
    pub unk50: u8,
    pub unk51: u8,
    pub unk52: u8,
    pub unk53: u8,
    pub pad2: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WetAspectParam {
    pub r1: u8,
    pub g1: u8,
    pub b1: u8,
    pub pad1: [u8; 1],
    pub alpha1: f32,
    pub r2: u8,
    pub g2: u8,
    pub b2: u8,
    pub pad2: [u8; 1],
    pub alpha2: f32,
    pub wet_rate: f32,
    pub wet_correction: u8,
    pub pad3: [u8; 11],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WhiteSignCoolTimeParam {
    pub time_limit0: f32,
    pub time_limit1: f32,
    pub time_limit2: f32,
    pub time_limit3: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Wind {
    pub common_capsule_begin_dmy_id: i16,
    pub common_capsule_end_dmy_id: i16,
    pub common_capsule_radius: f32,
    pub pad1: [u8; 120],
    pub pad2: [u8; 3],
    pub sfx_dir_pitch_min: f32,
    pub sfx_dir_pitch_max: f32,
    pub sfx_dir_yaw_min: f32,
    pub sfx_dir_yaw_max: f32,
    pub sfx_cycle_min: f32,
    pub sfx_cycle_max: f32,
    pub sfx_speed_min: f32,
    pub sfx_speed_max: f32,
    pub sfx_maximum_drag: f32,
    pub pad3: [u8; 88],
    pub pad4: [u8; 3],
    pub cloth_dir_pitch_min: f32,
    pub cloth_dir_pitch_max: f32,
    pub cloth_dir_yaw_min: f32,
    pub cloth_dir_yaw_max: f32,
    pub cloth_cycle_min: f32,
    pub cloth_cycle_max: f32,
    pub cloth_speed_min: f32,
    pub cloth_speed_max: f32,
    pub cloth_maximum_drag: f32,
    pub pad5: [u8; 88],
}
